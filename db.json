{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/css/noscript.styl","path":"css/noscript.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/comments.js","path":"js/comments.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/comments-buttons.js","path":"js/comments-buttons.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/config.js","path":"js/config.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/pjax.js","path":"js/pjax.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","path":"js/schedule.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/fancybox.js","path":"js/third-party/fancybox.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/quicklink.js","path":"js/third-party/quicklink.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/rating.js","path":"js/third-party/rating.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","path":"js/third-party/analytics/baidu-analytics.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","path":"js/third-party/analytics/google-analytics.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/growingio.js","path":"js/third-party/analytics/growingio.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/chatra.js","path":"js/third-party/chat/chatra.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/gitter.js","path":"js/third-party/chat/gitter.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/tidio.js","path":"js/third-party/chat/tidio.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/changyan.js","path":"js/third-party/comments/changyan.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqus.js","path":"js/third-party/comments/disqus.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqusjs.js","path":"js/third-party/comments/disqusjs.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/gitalk.js","path":"js/third-party/comments/gitalk.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/livere.js","path":"js/third-party/comments/livere.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/isso.js","path":"js/third-party/comments/isso.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/utterances.js","path":"js/third-party/comments/utterances.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/katex.js","path":"js/third-party/math/katex.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/mathjax.js","path":"js/third-party/math/mathjax.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/algolia-search.js","path":"js/third-party/search/algolia-search.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/local-search.js","path":"js/third-party/search/local-search.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/firestore.js","path":"js/third-party/statistics/firestore.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","path":"js/third-party/statistics/lean-analytics.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/mermaid.js","path":"js/third-party/tags/mermaid.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/pdf.js","path":"js/third-party/tags/pdf.js","modified":1,"renderable":1},{"_id":"source/about/curry.jpg","path":"about/curry.jpg","modified":1,"renderable":0}],"Cache":[{"_id":"source/_posts/ArrayList是线程安全的么.md","hash":"0413c3c32bf7e1b935fde69cfef2893137d6e38c","modified":1634888062244},{"_id":"source/_posts/EACCES-permission-denied-access-usr-local-lib-node-modules.md","hash":"4a06ee2787456622fa128cb7656429db88eb2f14","modified":1633682506359},{"_id":"source/_posts/Error-Spawn-failed.md","hash":"89316659b3212c20a0ac595633c26729e1ef72db","modified":1633682506362},{"_id":"source/_posts/Github-Hexo搭建笔记.md","hash":"114b41f944e49ff2eefed365cec795a0a58fe2bd","modified":1633682506365},{"_id":"source/_posts/Java常见的数据结构.md","hash":"76d9d1ebdede0143f4c7667e7fe07a5fbfbccf9b","modified":1634888202480},{"_id":"source/_posts/TypeError-line-matchAll-is-not-a-function.md","hash":"234da606023ca4740153d0b37b1520419df6e6f4","modified":1633682506371},{"_id":"source/_posts/T-Unit.md","hash":"dfc79d007340e5657ef3ae8771a097aaf40f3a26","modified":1633682506368},{"_id":"source/_posts/ViewModel如何数据共享.md","hash":"998f9d1253402eaf53b07cd85a0eac875a54dd3c","modified":1634889193792},{"_id":"source/_posts/androidview的绘制流程.md","hash":"78d85d42feed13e75de437351a550135bcfeae88","modified":1633684846190},{"_id":"source/_posts/android中的System-gc.md","hash":"01233cfb0af793cdc88a5fd1b81e40929d134c44","modified":1633682506411},{"_id":"source/_posts/hexo-YAMLException.md","hash":"0d81416bb531de44e490f689254ecbc06ff1a9b8","modified":1633682506424},{"_id":"source/_posts/git-github-com-Permission-denied-publickey.md","hash":"54b4c6dec387b2d2b885f834b560157499c57daa","modified":1633682506422},{"_id":"source/_posts/hexo多电脑部署.md","hash":"9fd4c0e70a3bae83536765251fd08a576f4af958","modified":1633682506447},{"_id":"source/_posts/hexo增加分类和标签.md","hash":"15c984c5ecea9fe39196ede644ba76966c7ff1fb","modified":1633682506429},{"_id":"source/_posts/rn入门.md","hash":"a2d96b82d8f07d531866ccd818ea7041c915563f","modified":1634867029622},{"_id":"source/about/index.md","hash":"bd294d8d81f650ceed8be104bf0e0005658c30b0","modified":1633682506464},{"_id":"source/_posts/记录.md","hash":"21fa500a29a1cb3eac25ce3c38cb60e163930522","modified":1633682506459},{"_id":"source/categories/index.md","hash":"e442818b73ed448354a91aca72caeb04f1107130","modified":1633682506467},{"_id":"source/tags/index.md","hash":"ecbd8a19ae3e7f22ea189ff5cd33a08c81ca537f","modified":1633682506470},{"_id":"source/_posts/Github-Hexo搭建笔记/image-20210918165516634.png","hash":"593a9f9444f086fe22e16efe3271b8f854f530c6","modified":1631955316637},{"_id":"source/_posts/Github-Hexo搭建笔记/image-20210923104949941.png","hash":"42d44f40ca13d2016858d4cb760650cb24d483ce","modified":1632365389970},{"_id":"source/_posts/Github-Hexo搭建笔记/image-20210923105008730.png","hash":"55f1d37ea6f9bed83c029b99bc839c7d5c39a560","modified":1632365408733},{"_id":"source/_posts/hexo-YAMLException/image-20210924150934346.png","hash":"bdd0ac0d2656b30684ce76a09bbc8e44d504a865","modified":1632467374345},{"_id":"source/_posts/hexo-YAMLException/image-20210924150941054.png","hash":"76f7cde90df35b8d78def4cbfab859476bab6747","modified":1632467381052},{"_id":"source/_posts/hexo-YAMLException/image-20210924151455552.png","hash":"c38490f623e69d8ed74106d6805d167c1c04198b","modified":1632467695561},{"_id":"source/_posts/hexo-YAMLException/image-20210924151457951.png","hash":"c38490f623e69d8ed74106d6805d167c1c04198b","modified":1632467697953},{"_id":"source/about/curry.jpg","hash":"4598d39f13a0c8293367b1bb88b431187ba0d513","modified":1632639472189},{"_id":"source/_posts/TypeError-line-matchAll-is-not-a-function/image-20210925111618240.png","hash":"f677a40ab161565617222f8488c5a78b3aa12114","modified":1632637154629},{"_id":"source/_posts/index/curry.jpg","hash":"4598d39f13a0c8293367b1bb88b431187ba0d513","modified":1632639472189},{"_id":"source/_posts/EACCES-permission-denied-access-usr-local-lib-node-modules/image-20210925105028907.png","hash":"ac2c48973e7f5da724b6d8754f4b403ef775c611","modified":1632637154622},{"_id":"source/_posts/git-github-com-Permission-denied-publickey/image-20210925123231078.png","hash":"938bbaa0455a0d04cf501d4c80dc61d3f53762df","modified":1632637154635},{"_id":"node_modules/hexo-theme-next/_config.yml","hash":"1292d92cda574de7be79be9eed71e26b8d78f419","modified":1632638255720},{"_id":"node_modules/hexo-theme-next/LICENSE.md","hash":"68fc9a03d50fd4b5ea97092b05967d1819dea2c4","modified":499162500000},{"_id":"node_modules/hexo-theme-next/README.md","hash":"fab15a85d9d8d90ecd8879525b9b74fb1c197978","modified":499162500000},{"_id":"node_modules/hexo-theme-next/_vendors.yml","hash":"afdebdb0be4158c0bf0a408109a5aa42c496dffd","modified":499162500000},{"_id":"node_modules/hexo-theme-next/package.json","hash":"e34a3bf296a80305bea5fed2922dbff1cb59418a","modified":1631953833617},{"_id":"node_modules/hexo-theme-next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":499162500000},{"_id":"node_modules/hexo-theme-next/docs/AUTHORS.md","hash":"a648823121563c34a177ae91f5a774b5e29f01a0","modified":499162500000},{"_id":"node_modules/hexo-theme-next/docs/LICENSE.txt","hash":"f5b14f791b7cfa1d16da981d929152e088a5d1b8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/README.md","hash":"b2567e32805dda79601157351a07e5ca9fe01315","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/ar.yml","hash":"bca66db21c015dbd32970d8708b898518a773e1e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/de.yml","hash":"4be7b8b76c81bf1853eb36d2e874b17546a0e792","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/en.yml","hash":"814d81c27fed736055ee300e0a6505b26ff4313c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/es.yml","hash":"651e3b33d86a7cdb9fd7895ca28279f8b1a24faa","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/fa.yml","hash":"6456d40dd42f44101d9d6e7054e9884e9163f948","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/fr.yml","hash":"b15dc05afdc94de02e5d3fee4f8d3dc5594dd37e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/id.yml","hash":"14e794db4eca36b257994d81eb513e61d1edcbd6","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/it.yml","hash":"c1eeab4992c76bfd436bb205ce58b1cfeef55ee6","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/ja.yml","hash":"d48c4157e0e02e847aac7b513580d3364c81948c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/ko.yml","hash":"6387357ac2dd498e8b8d630d27050a59180d7e8f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/nl.yml","hash":"ecb8e39c6225f3c068a5fdd569ee7dafd5c41a1f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/pt-BR.yml","hash":"a1f27b3a592fc58f17d247f5563ff4a90a3da5f2","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/pt.yml","hash":"63a3e1e728ba5e6e22150de7331bb8a654f34960","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/ru.yml","hash":"e9af1afe529ca747a04b801401d394b2ad696fde","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/si.yml","hash":"615d18d044f44df476d6bfbf73f7b0edc2632168","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/tr.yml","hash":"0bebba73d6f06c7dad61f80c0d7ad5f6f1791a01","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/uk.yml","hash":"7dd24580c0865c5a7bc4d391855045366a598936","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/vi.yml","hash":"c669c34da544a563ceae3e196addc9df6a78e024","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/zh-CN.yml","hash":"5a3ab21210304efef736e96bad254f789f42c567","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/zh-HK.yml","hash":"f195bb0502ffe66e850077a1af1033455ea65f93","modified":499162500000},{"_id":"node_modules/hexo-theme-next/languages/zh-TW.yml","hash":"92256b90028de9a1e79c6bc0e5885b93e7fb4b17","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_layout.njk","hash":"20e4160cd0deb4fa272cc3aed0f43520b3cf4a9c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/archive.njk","hash":"d759f4d2cf5ddc6875ea250113a00662c1caf6d1","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/category.njk","hash":"0a590e87af50e57b15fc37695c9a3bf4a97c3d92","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/index.njk","hash":"37ec3d1bcd20b8ac1d18e0d68f990450890b46cd","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/page.njk","hash":"9cd3eca2c468bb46c7c5bf391bea4b025af178f6","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/post.njk","hash":"6abeb85fb3e4c382ed4bb6049b12a807e6226e67","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/tag.njk","hash":"6cd707f846bfd6becbcfb060c26958bb4015c31f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/docs/ru/README.md","hash":"87edab5a3eb7577a409c01df3f1631de40f8956f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7a06d443f374bd1e84294067a0ac796afd9fbe60","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/events/index.js","hash":"89091bc943cd8b8c63b8af3d26fb0a027048e9ba","modified":499162500000},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CONTRIBUTING.md","hash":"a089f7a8368ab0b7d7b9b7ec0ac3767a453435df","modified":499162500000},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/README.md","hash":"02bafc6ee86263790603861e356596f0c916e392","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/default-injects.js","hash":"872f01cb10e422a648ea505436532e776e92926b","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/locals.js","hash":"0cd7da6755459d60779f0a7ccf311e26e184d55d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/minify.js","hash":"7dc9e9366a19dc3c7be7ff482fbd19c88e620bf5","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/post.js","hash":"42a9b81c5449afa9d67770604478168333c93804","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/helpers/engine.js","hash":"b9785bc737470e9b8e910e7da9e8c45c2ead58fa","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/helpers/font.js","hash":"3394185a7f0393c16ce52c8028f90da3e9239c55","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-config.js","hash":"3850424dbb23ca0791b35695e24804492d89f925","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-url.js","hash":"a11b71ba0c5012e2cdcab31c15439156b215563e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-vendors.js","hash":"afdd6a188a74c188f0dd154fac70efd4080ca262","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/button.js","hash":"c6ad2ed544fbb25ecb5d820c36e76302504271b7","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/center-quote.js","hash":"92c19d796bdb3320df9caea59bf52df7a95d9da9","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/group-pictures.js","hash":"79102d9e9bccff6224e77a77c4d2d363094ae3df","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/index.js","hash":"17f9451ce1f10f78437f52218757d38d4e1591b0","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/label.js","hash":"8a73348186113bae0a51ea2f891c1bb882fab05a","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/caniuse.js","hash":"935a311142a409c1896b3ae3f01fe7a9e2db1134","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/link-grid.js","hash":"18a483c2d5afd701f6080ffdddf2d1321370336c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/mermaid.js","hash":"4fb01ca650fa8b256b8d48f50dc1b18350bd3d6d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/note.js","hash":"7b94ddb46b7d4b0fe815f2fbe4bd375f07f55363","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/pdf.js","hash":"344636b6fd7e27e8831c1e194039afc0d61931cd","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/tabs.js","hash":"0eabe51da40b4b13e16419c8fe02452d9a4fef73","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/tags/video.js","hash":"2ee926448583be8f95af1f2884ae2c9c4830151d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_macro/post-collapse.njk","hash":"1a30d751871dabfa80940042ddb1f77d07d830b9","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_macro/post.njk","hash":"b106599106285ecd4c0c1e0ed11c46a36b5a69d5","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_macro/sidebar.njk","hash":"a20ed899d6a797de0b35c46bfd03722023649187","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/comments.njk","hash":"c12f8a7497596441503f2541d2f746f2ee7dd594","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/footer.njk","hash":"19713f472972caac33ae5fbcfe9105da61257de4","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/languages.njk","hash":"e43f22198cccb5f6e306b1ce0d28d12a4fb891f8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/pagination.njk","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/widgets.njk","hash":"852a750524decf1efa587cd52b09e387ed8315de","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_scripts/index.njk","hash":"6668878a0f9a1166c6a879755f54a08d942da870","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_scripts/vendors.njk","hash":"be80b9fe415a9a09d74c28e230995fd292dfc123","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/fancybox.njk","hash":"844559f46e2ff1c8be234d5763703106e2072a7b","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/index.njk","hash":"3221ebcb2f308659ed1a86d1d53978aa62576958","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/quicklink.njk","hash":"0efed71ed530447718c4ea5bbd5fc8695b0b0d5f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/rating.njk","hash":"1bcdbc7fde26d6d9ef4e7fa43ffcff5a9506b20e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_colors.styl","hash":"b37f9847d2f95632e911df670b51921a7d748068","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_mixins.styl","hash":"acef5acc728f24cb657be8d7010d836b4d556b0e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/main.styl","hash":"78ce791cc4ac95386cf6839ca72f5f7b51f86ee9","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/noscript.styl","hash":"76bba5d7916e9930e68215a0fce3a7d81c44510f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","hash":"2cb74fd3ea2635e015eabc58a8d488aed6cf6417","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","hash":"6d4bd07a6f8e1b4083119dca0acb5b289533b619","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","hash":"b1d24dc9ebc2a3b4a4c5a4f737de2f8ef126cfa9","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/pjax.js","hash":"5bfc1cea214bd31847adc356f37df8e0b6a449df","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","hash":"a4d42422119a0dacad426f033ea3aaf4e3cf339b","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/config.js","hash":"92ab6bb3c3122980699f0613dac27a7cabfedecc","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","hash":"71d62fc3584c47ff2d4cc945226e412264399be9","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/highlight.js","hash":"6aec7b2c38c50989a23bfaa0d560e75c7f553e12","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/injects.js","hash":"d987709267a1bc6e5014411e9983d7c49c102c16","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/utils.js","hash":"b281be775b693f9bf32766c8f6ef703c72ac9b00","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/vendors.js","hash":"08dac57e15c9f06c7cf54884b045f2362595f9d2","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/changyan.js","hash":"aa05e6b3d613a756178b8ba06832ad27499d4c14","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/default-config.js","hash":"93ee5f9109dad885dc38c49bcee630c10f9dce6e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqus.js","hash":"7f71d6b271ba65ff333d5682e7575711d368c0d2","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqusjs.js","hash":"135b87d151055eefdbc711d9e704b112b3214a84","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/gitalk.js","hash":"7bb7dafdd7f6bca8464b54e17e552ce7f1714195","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/isso.js","hash":"ff8b5b5145220a17d0ecd9508ba9bd2d3b2da47d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/livere.js","hash":"5a07d8bb52bc1d51a624ca8db54be144566c306b","modified":499162500000},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/utterances.js","hash":"d3bded697bc32dace689d2a6dfb6eb7514169d15","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head-unique.njk","hash":"49aa8de07918a11399131dfd703418af3f0a1a19","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head.njk","hash":"8ed5ab7ec63f9fd5438d1c497cc5f50ae11fcfdf","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/brand.njk","hash":"ffb6c69a9c90793cbe9bf0544b55f7a41c016d8f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/index.njk","hash":"53895b3af95667edc5bf5d7356f8a2b4fe091447","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu-item.njk","hash":"b46f412c0b4f775fd329d50357f722f5d7c1a3ba","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu.njk","hash":"c9390824b57f23b7c8a5c23a9834514123673766","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/sub-menu.njk","hash":"75a158a5b54a3a76ee6590f5e0e2dd4a9f0be869","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/breadcrumb.njk","hash":"edb3bb6d644b7407673c5ef3a426a244e98fcf89","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/categories.njk","hash":"17156d99941f28a225951ffdcfa9a115e20dc2d2","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/page-header.njk","hash":"7ed4f102a1825195cff8d7995bf9219f323a9034","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/schedule.njk","hash":"ca2ccf3cf1874c45712f192ad45dea96fbd9920d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/tags.njk","hash":"a18d1598e36cc72f2b0b24c3cc3c5990dfaa3254","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-copyright.njk","hash":"133942922e34abae9e4de7ea5591d77c0caa4b37","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-followme.njk","hash":"154df0bb323c332d8c25343f258ee865e5553423","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-footer.njk","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-meta.njk","hash":"471dcbe22d0dbe043dcf25a1a1c17ca76aa9a548","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-related.njk","hash":"7384e6390067ef2a84e7310d6adb3f6104ed62e2","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-reward.njk","hash":"002b51d0cae3f2e2e008bdc58be90c728282de5b","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/algolia-search.njk","hash":"efb2b6f19df02ba5ae623a1f274fff52aed21e6f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/index.njk","hash":"8f6f256ab3b351ffc80f1f3f1d9834e9a7cfac31","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/localsearch.njk","hash":"661f7acae43f0be694266323320f977d84119abe","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_partials/sidebar/site-overview.njk","hash":"5c01e380ba843f8016d8fa4593432430f5bd3584","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/baidu-analytics.njk","hash":"6215309aee028dcb734452beec448c5afb6c63fc","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/cloudflare.njk","hash":"c978e9efd472c4825f93b83524b11f1c4f7efaab","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/google-analytics.njk","hash":"d89066ff53879693f023e540d59c86137172c529","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/growingio.njk","hash":"8afaa772c390bd9d53a5cff9645ac3168334eb98","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/index.njk","hash":"2d36a481a70d5f450f1f166dc556ac1218b18537","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/chatra.njk","hash":"d7263fca16d0278ccf1f6aa1c6df6902a6344a09","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/gitter.njk","hash":"f8cc14b7aa949999a1faaeb7855e2f20b59a386d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/tidio.njk","hash":"02aab857c27fc103216029be991688b12a73a525","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/changyan.njk","hash":"d1c950f8fbdf85e7a3eae5463767a89e858e8220","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqus.njk","hash":"9375b19a89b7fa9474e558d085af5448d4c5c50c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqusjs.njk","hash":"0749cb6902baecdfd01f779a2a2513f6d2f6a823","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/gitalk.njk","hash":"b63b7e2ede0d3e66e732fa1a06bda9b19e1e85d4","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/isso.njk","hash":"64cc3bdaf644fd32c0d0a247f29f5b6904da9af3","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/livere.njk","hash":"3b13b09fba84ec6000886890a6710736a2b8fafe","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/utterances.njk","hash":"5a94032bc3512a10ad4328fc19ec07b819a1d687","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/index.njk","hash":"abf37fc55aa86702118e8fdf5bf2d389dd589aa0","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/katex.njk","hash":"d82c24136bbd3443b85f07f5579845833b594684","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/mathjax.njk","hash":"3677017fd4572b158311f5f5d870590ab25184e0","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/algolia-search.njk","hash":"24ed76e0c72a25ac152820c750a05826a706b6f4","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/localsearch.njk","hash":"3fc91aba5b17a5ae60b8e04707a7da87db4d0340","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/busuanzi-counter.njk","hash":"a4bc501da0f22f7e420f0ca47e83988ce90b1368","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/firestore.njk","hash":"d32ebe94560fa95824478ebbff531bffc47b194d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/index.njk","hash":"568ddf7955d11d93fb5e842b403a7ac8b1b7fdb1","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/lean-analytics.njk","hash":"2446e748cdc102c78492216319ac02148db7daf6","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/mermaid.njk","hash":"099e031f52fb8e47b3af5b2684737efc9e643ee7","modified":499162500000},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/pdf.njk","hash":"2c81984cc4f5123103460442f6e046f5b6c97127","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Gemini.styl","hash":"96e0a7c2a65ce68215e17e369085b2ea2f1334f2","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_variables/base.styl","hash":"32a1b73944561655087d80f025208a84e012b3cf","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Mist.styl","hash":"e1fbf169b9b6a194b518240cbd06ec3c48b83d61","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Pisces.styl","hash":"c65536a128b9bc9dbe2fbb1b235a3cded2891002","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Muse.styl","hash":"e3be898f5ebcf435a26542653a9297ff2c71aeb0","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/schemes/muse.js","hash":"62f4638674c92dfb72454fee38751d0227d3d225","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/fancybox.js","hash":"c098d14e65dd170537134358d4b8359ad0539c2c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/quicklink.js","hash":"6f58cd7aa8f6f1ab92d5a96551add293f4e55312","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/rating.js","hash":"4e92c2d107ba47b47826829f9668030d5ea9bfb8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/back-to-top.styl","hash":"ece860218125bdb2578f373ed4f5040c9670e4b1","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/back-to-top-sidebar.styl","hash":"d4809783ded05625675b1b4bbd9e99d7f5f7d7f9","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/index.styl","hash":"3c7ae405dd30b9b46494a6b9a6cb1b7ec6138ba9","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/reading-progress.styl","hash":"2a29bf3692f42f84e8f29314e0fb349f86fc727a","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/index.styl","hash":"0c9f72ad98807521cbdcee7b5bbe2e884311db39","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/mobile.styl","hash":"aafbb3c5c20f525a92716d89ff216c3081d7b4da","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/base.styl","hash":"2e58cb90a77d3dd16e02b8949808b4b16453828c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/buttons.styl","hash":"a042571d85ff7265f799004239a45f36b716b8a6","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/comments.styl","hash":"e4fecc889ba3317a64e9abba5842c79dff9b7827","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/index.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/pagination.styl","hash":"41cba8c4c5637a6b8f1b62e67673b33676f5d734","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tables.styl","hash":"e840b23d33023e6d45e018f6e84b683dd56efd8d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/toggles.styl","hash":"572a41499391677d84b16d8dbd6a996a3d5ce041","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Gemini/index.styl","hash":"fd49b521d67eaccc629f77b4e095cb7310327565","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_header.styl","hash":"4817e77577896ab5c0da434549917ee703a3f4cf","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_layout.styl","hash":"5604ac1e161099a4d3e5657d53507268866dc717","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_posts-expand.styl","hash":"b332868d76d9f1651efd65abfc0d3c9d699b1a45","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_menu.styl","hash":"357b899ac0f0dfbbbebf1ea972030c7cefa463ce","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/index.styl","hash":"ab16a3dcdc0393b9b582ef59dcc13db9320e917c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_layout.styl","hash":"82a29572dd90451f75358a2ee2522b87304a0bb8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_header.styl","hash":"06080fd963c904d96c00eff098a284e337953013","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_menu.styl","hash":"8a70d51d8f7cd113e5fbc9f0e70c46a072f282c8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sidebar.styl","hash":"944364893bd7160d954c10ba931af641c91515a4","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_header.styl","hash":"be5c46b983df08b9dbac1b4749b1a101b54b6b50","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_layout.styl","hash":"6eee86c8f0175d6c09e434053516cd8556f78d44","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_menu.styl","hash":"72dc825c50357402c342d62ab60fc0c478ab6bc1","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sidebar.styl","hash":"d9141e6e14a56b5952488101e9a8388c2170e270","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"778ed2ad5643b93970c95626b325defeb586733f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/index.styl","hash":"8000075b227749a7495eaf417cac6ccfbe441580","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/google-analytics.js","hash":"59684383385059dc4f8a1ff85dbbeb703bcdbcb5","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/gitter.js","hash":"cc38c94125f90dadde11b5ebac7d8bf99a1a08a2","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/changyan.js","hash":"8c8ebec444c727b704ea41ad88b0b96ed2e4b8d4","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqus.js","hash":"e1cc671b0d524864fd445e3ab4ade9ee6d07e565","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/disqusjs.js","hash":"b6c58f098473b526d6a3cd35655caf34b77f7cff","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/algolia-search.js","hash":"ac401e3736d56a3c9cb85ab885744cce0b813c55","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/search/local-search.js","hash":"b37f1b14aef2402d0c2d88f999ff0ce5ef6823c1","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/firestore.js","hash":"0960f16107ed61452fb0dffc6ed22dc143de34ef","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/statistics/lean-analytics.js","hash":"5a928990856b8e456f0663cf3b6b406733672e39","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/mermaid.js","hash":"aafb764c64f6cd5a48ad194adf65ac77078242b1","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-body.styl","hash":"ea351936d71e0b6259febac3d7d56d1be6927bf9","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/index.styl","hash":"b3fa752f72ca1413289b76c56fbd33a00e3d25d7","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-collapse.styl","hash":"ec37a36e94ba791663607a5022f763915778578f","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-footer.styl","hash":"1d284f3ea03ba9b4feb76b375e539a8e0bccf1c3","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-gallery.styl","hash":"aa366d37389760c8595529b850f461569577a1c5","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-followme.styl","hash":"76d0dfb3a8b873a6180604ac6daecf38b6a963a2","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-header.styl","hash":"bef7791a2e67e79f02076f2a89e1c7f95a83048c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-nav.styl","hash":"9ac6f477177264c26a46e8333b8456720a0444dc","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-reward.styl","hash":"07cff69f2d57e6321595f64c16d8b763dc88df6a","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/breadcrumb.styl","hash":"8afdc311c6b8db121758371f95cf1c5e77354f42","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/categories.styl","hash":"b6e2eb1550a7845cb2adf86081a4ab6c7bde1e68","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/index.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/schedule.styl","hash":"6b816c2511242ee503fb5f34cd3e4dcdafc06b85","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/tag-cloud.styl","hash":"1a81d1a71fcf0699629ce6e72dfd0a15f3a2dd0a","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/index.styl","hash":"b457756758f0632767e8a560e3033059cbe4a67b","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/gitalk.styl","hash":"7102f8e819b62cf7d121fd063dc663fd068feaa6","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/math.styl","hash":"83c6588c51cd418336f4945813410a100ddfe2a4","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/related-posts.styl","hash":"2c534d2b2dbc932ad65d335a720a7ba9612bac04","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/search.styl","hash":"2896840ab8ac8ab2a7f76d18df893f290ac31625","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/utterances.styl","hash":"bf88d9c585d7b00463c46352402cfea415c29493","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/footer/index.styl","hash":"5a4e5ed613f3990378f3f632e8f16b33374e0095","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/bookmark.styl","hash":"d6d60f02b5e9f89dbfce180b3884030898022664","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/github-banner.styl","hash":"cf194bea1c9e67fde871a04de3bc81df72c54277","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/menu.styl","hash":"392fd53a8dd4e3f33a853ebb24290a622300e0ff","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/index.styl","hash":"f1778d2c56974b96dae429456d5c55be325c4946","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-meta.styl","hash":"9a47c9045e443b8d20932f9c564a3a05fa4c6b51","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/index.styl","hash":"eae7b83f1c711ad2ab3a41d89f517445856ffec8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-nav.styl","hash":"bf3ad8b4268f763a1e26377681644887694bc009","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"5b38ac4a0f1ade0e681aff0e3366c481d9cf3dcd","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"52fc98b1435129eb3edb9293ced9e507741f1350","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"9950c3188a28e1c63b5498b7bdcd14b12ace3e28","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"b926e368f702f8686aaa2eb98d3d2e533418958c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"fbdb63c6a8887d19b7137325ba7d6806f728139c","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"f7ff85fe6c4efb8ff036fab2c3277b7d8bed69a8","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"6394340c28a21f6aa90e786f3bfe24fb26595653","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/site-state.styl","hash":"69eb1c282a8fd5dbab606cc09c34c5dc8e44e753","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"432e73bc4f99322af6af1852e0ea6e674919c31a","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"83ee4993710fc8daa1c8dbfccd5d5091fd244c30","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"15a5e273a8137550c93c8d2a60f9fcf86e04a89e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/index.styl","hash":"08e79881d58d01afab6dbed37ab4f52356564d7e","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"393ff96234e4196b569d4b11496774eb78e147de","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/index.styl","hash":"cef4e779473daa3761709958243c6b8a57bbd814","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/label.styl","hash":"debee14539272fbe3835a7d3853af2230baa3501","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/link-grid.styl","hash":"2421500e447822ef1b6826403a3e1df3345641d7","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/note.styl","hash":"f53e6c12bd4805888f696386d00668f23cd335e7","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/mermaid.styl","hash":"3c029a003e9bf747e1b9cc7c0c127f6028374876","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/tabs.styl","hash":"50b00218e854200c4ec0573a841e226d49c45cba","modified":499162500000},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":499162500000},{"_id":"source/_posts/androidview的绘制流程/源码流程图.png","hash":"a0878e3e262b61cad4f1dcb82ba87e773dbe89e3","modified":1633682506387},{"_id":"public/about/index.html","hash":"87ff981b809e2d988be2d7e7a3d4911d54e98893","modified":1635140285494},{"_id":"public/categories/index.html","hash":"7c6782bd7499788cc23f544cce4a287e52b78842","modified":1635140285494},{"_id":"public/2021/10/22/ArrayList是线程安全的么/index.html","hash":"d35fcd3e8232173e8e1eb78c626b99edbcb58452","modified":1635140285494},{"_id":"public/tags/index.html","hash":"6df019f55d0613f3ca4b39e47db79aa511c325fd","modified":1635140285494},{"_id":"public/2021/10/13/rn入门/index.html","hash":"b33c989f92b0aba2c876b83cd1ca8583075cbc6f","modified":1635140285494},{"_id":"public/2021/10/04/androidview的绘制流程/index.html","hash":"6d93ff212a94863fb3fad7210852f01694ce4a22","modified":1635140285494},{"_id":"public/2021/10/22/Java常见的数据结构/index.html","hash":"7f6dfc77f245d99d6e57633d4b143c501c12d8e0","modified":1635140285494},{"_id":"public/2021/09/26/记录/index.html","hash":"d9842b64f062d2590b98b2e16064f82e31700cb9","modified":1635140285494},{"_id":"public/2021/09/25/git-github-com-Permission-denied-publickey/index.html","hash":"a3bed14ab42cd1a07b213f0ff9de620fb5574aed","modified":1635140285494},{"_id":"public/2021/09/25/Error-Spawn-failed/index.html","hash":"01c3128376b1b6548793bb79126cb47ab3d50bb4","modified":1635140285494},{"_id":"public/2021/09/25/TypeError-line-matchAll-is-not-a-function/index.html","hash":"015c15e7b8809b6813a6a2e80921b73decce1845","modified":1635140285494},{"_id":"public/2021/09/25/hexo多电脑部署/index.html","hash":"f47eedd5413179ee66e2112f06e53b39f5835905","modified":1635140285494},{"_id":"public/2021/09/25/EACCES-permission-denied-access-usr-local-lib-node-modules/index.html","hash":"469f04bcdf2b24031509203c53058a7ddbfcdd79","modified":1635140285494},{"_id":"public/2021/09/24/hexo增加分类和标签/index.html","hash":"cc53288e3416937fd24af8d1a69c13dd846e2b2d","modified":1635140285494},{"_id":"public/2021/09/24/hexo-YAMLException/index.html","hash":"12511bcd2605697de5c3acdf082e8ea2cad33af9","modified":1635140285494},{"_id":"public/2021/09/24/T-Unit/index.html","hash":"267fff4dd40deadddbbdd55712947cbebc780332","modified":1635140285494},{"_id":"public/archives/index.html","hash":"aac644e04e1af243c8cf467f76c9aed841e2c3dd","modified":1635140285494},{"_id":"public/archives/2021/index.html","hash":"49532b41ccfaa78e8b1fa1d0d4e64da7686b9c72","modified":1635140285494},{"_id":"public/archives/page/2/index.html","hash":"93638c836740c237beeb5157579007276e5820ab","modified":1635140285494},{"_id":"public/archives/2021/page/2/index.html","hash":"deb22bf2af06bf94182c299d34a332e4506bd327","modified":1635140285494},{"_id":"public/archives/2021/09/index.html","hash":"6a546ef23e609ea444a9767882ba7cbe449b95eb","modified":1635140285494},{"_id":"public/archives/2021/10/index.html","hash":"8c30e0192c4b013827b76bd6acee6d74b9b0c55e","modified":1635140285494},{"_id":"public/archives/2021/09/page/2/index.html","hash":"51aba26f62e5476011ed51ff17d0d3bbf2202788","modified":1635140285494},{"_id":"public/categories/Android/index.html","hash":"746ac7a5aff3603fcd3c18a20c3a953b62af7b2c","modified":1635140285494},{"_id":"public/categories/Kotlin/index.html","hash":"e9f1b795909daf5d0324dc5f25afa755390baaf9","modified":1635140285494},{"_id":"public/categories/hexo/index.html","hash":"085f123248d469dbc08cf25e68bff2c95fd8cb49","modified":1635140285494},{"_id":"public/categories/git/index.html","hash":"6814f8cb709eb8fb15f0865df6b401abffae2079","modified":1635140285494},{"_id":"public/categories/RN/index.html","hash":"e6517fc7c0c7e14b415abffdc574dd5ef5970c5e","modified":1635140285494},{"_id":"public/categories/随记/index.html","hash":"f10d4ef103b3654f9d22cc58845f4e4d908b1617","modified":1635140285494},{"_id":"public/tags/Android/index.html","hash":"4bcc99035d598616d0c34bfb2f03be9a1f148189","modified":1635140285494},{"_id":"public/tags/hexo/index.html","hash":"d840563a118fbe77f705a50d8609431dfbf639b5","modified":1635140285494},{"_id":"public/tags/Kotlin/index.html","hash":"0bad885795a7f5fe3ad1713c7766622241999247","modified":1635140285494},{"_id":"public/tags/草稿/index.html","hash":"b50d3271b26fd77a89493a16de8ce37e50eef716","modified":1635140285494},{"_id":"public/tags/git/index.html","hash":"e3abf420ef42f81fb953e35183e3db9d192d4df2","modified":1635140285494},{"_id":"public/tags/RN/index.html","hash":"d07fdccff93db3a859ba71c41b897e9661527dd3","modified":1635140285494},{"_id":"public/2021/10/22/ViewModel如何数据共享/index.html","hash":"20a8d00131d2768399006f8ede7eecfbc88ddc13","modified":1635140285494},{"_id":"public/2021/09/27/android中的System-gc/index.html","hash":"080b0c603face6003cfd5c4bc2414e2c9ae63dea","modified":1635140285494},{"_id":"public/2021/09/18/Github-Hexo搭建笔记/index.html","hash":"7994b77a53258cbe68302eacbd5602abb499f8d4","modified":1635140285494},{"_id":"public/index.html","hash":"6d7c4052d24ef32916b09f8aaf048edb5ada1a5b","modified":1635140285494},{"_id":"public/page/2/index.html","hash":"29d21cdbc477465c2eaca764e2a2fc826178942a","modified":1635140285494},{"_id":"public/images/avatar.gif","hash":"2dbc3e2f2d624b2ca1afe6edc2ca17307f1950c8","modified":1635140285494},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1635140285494},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1635140285494},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1635140285494},{"_id":"public/images/logo.svg","hash":"2cb74fd3ea2635e015eabc58a8d488aed6cf6417","modified":1635140285494},{"_id":"public/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1635140285494},{"_id":"public/2021/09/18/Github-Hexo搭建笔记/image-20210923104949941.png","hash":"42d44f40ca13d2016858d4cb760650cb24d483ce","modified":1635140285494},{"_id":"public/2021/09/18/Github-Hexo搭建笔记/image-20210923105008730.png","hash":"55f1d37ea6f9bed83c029b99bc839c7d5c39a560","modified":1635140285494},{"_id":"public/2021/09/18/Github-Hexo搭建笔记/image-20210918165516634.png","hash":"593a9f9444f086fe22e16efe3271b8f854f530c6","modified":1635140285494},{"_id":"public/2021/09/24/hexo-YAMLException/image-20210924150941054.png","hash":"76f7cde90df35b8d78def4cbfab859476bab6747","modified":1635140285494},{"_id":"public/2021/09/24/hexo-YAMLException/image-20210924151455552.png","hash":"c38490f623e69d8ed74106d6805d167c1c04198b","modified":1635140285494},{"_id":"public/2021/09/24/hexo-YAMLException/image-20210924150934346.png","hash":"bdd0ac0d2656b30684ce76a09bbc8e44d504a865","modified":1635140285494},{"_id":"public/2021/09/24/hexo-YAMLException/image-20210924151457951.png","hash":"c38490f623e69d8ed74106d6805d167c1c04198b","modified":1635140285494},{"_id":"public/css/main.css","hash":"a1f42e8268c0853de6ea6f46eef441a27be0aa13","modified":1635140285494},{"_id":"public/js/bookmark.js","hash":"0f563ffbf05fad30e854e413ab17ff7164ab5a53","modified":1635140285494},{"_id":"public/css/noscript.css","hash":"54d14cd43dc297950a4a8d39ec9644dd5fc3499f","modified":1635140285494},{"_id":"public/js/comments.js","hash":"66ae2e26ea36a41b72c638ea8b220296638ae952","modified":1635140285494},{"_id":"public/js/motion.js","hash":"6d4bd07a6f8e1b4083119dca0acb5b289533b619","modified":1635140285494},{"_id":"public/js/pjax.js","hash":"5bfc1cea214bd31847adc356f37df8e0b6a449df","modified":1635140285494},{"_id":"public/js/comments-buttons.js","hash":"1a7344440321713426a0b2ab17e276b5bdf85ade","modified":1635140285494},{"_id":"public/js/utils.js","hash":"a4d42422119a0dacad426f033ea3aaf4e3cf339b","modified":1635140285494},{"_id":"public/js/next-boot.js","hash":"b1d24dc9ebc2a3b4a4c5a4f737de2f8ef126cfa9","modified":1635140285494},{"_id":"public/js/config.js","hash":"4c4ebbe3b3f3841a26f9d5af6d0ba8bc6da01c54","modified":1635140285494},{"_id":"public/js/third-party/fancybox.js","hash":"c098d14e65dd170537134358d4b8359ad0539c2c","modified":1635140285494},{"_id":"public/js/schedule.js","hash":"71d62fc3584c47ff2d4cc945226e412264399be9","modified":1635140285494},{"_id":"public/js/third-party/quicklink.js","hash":"6f58cd7aa8f6f1ab92d5a96551add293f4e55312","modified":1635140285494},{"_id":"public/js/schemes/muse.js","hash":"62f4638674c92dfb72454fee38751d0227d3d225","modified":1635140285494},{"_id":"public/js/third-party/rating.js","hash":"4e92c2d107ba47b47826829f9668030d5ea9bfb8","modified":1635140285494},{"_id":"public/js/third-party/chat/chatra.js","hash":"c32180522788c10e51df1803aa6842ef0432ddc9","modified":1635140285494},{"_id":"public/js/third-party/analytics/baidu-analytics.js","hash":"f629acc46ff40c071ffd31b77d5c7616f0fdd778","modified":1635140285494},{"_id":"public/js/third-party/analytics/growingio.js","hash":"78dd3cf04082b7dbe6246e404b2aa8e726922402","modified":1635140285494},{"_id":"public/js/third-party/analytics/google-analytics.js","hash":"59684383385059dc4f8a1ff85dbbeb703bcdbcb5","modified":1635140285494},{"_id":"public/js/third-party/chat/gitter.js","hash":"cc38c94125f90dadde11b5ebac7d8bf99a1a08a2","modified":1635140285494},{"_id":"public/js/third-party/comments/disqus.js","hash":"e1cc671b0d524864fd445e3ab4ade9ee6d07e565","modified":1635140285494},{"_id":"public/js/third-party/chat/tidio.js","hash":"b0079f6a4601e06ca6fe46e83a2f5af553e9bc3c","modified":1635140285494},{"_id":"public/js/third-party/comments/gitalk.js","hash":"0ec038cf83e8ec067534f16a54041e47a3c1e59a","modified":1635140285494},{"_id":"public/js/third-party/comments/changyan.js","hash":"8c8ebec444c727b704ea41ad88b0b96ed2e4b8d4","modified":1635140285494},{"_id":"public/js/third-party/comments/disqusjs.js","hash":"b6c58f098473b526d6a3cd35655caf34b77f7cff","modified":1635140285494},{"_id":"public/js/third-party/comments/livere.js","hash":"2247d88c934c765c43013337860774aaa99f0b31","modified":1635140285494},{"_id":"public/js/third-party/comments/isso.js","hash":"753a873b6f566aff5ba77ca23f91b78eb880ca64","modified":1635140285494},{"_id":"public/js/third-party/comments/utterances.js","hash":"f67f90eb03e284c82da2b8cf2f1e31801813c16d","modified":1635140285494},{"_id":"public/js/third-party/math/katex.js","hash":"83c54ee536e487a1031783443fe0cb63b1b4767e","modified":1635140285494},{"_id":"public/js/third-party/search/local-search.js","hash":"b37f1b14aef2402d0c2d88f999ff0ce5ef6823c1","modified":1635140285494},{"_id":"public/js/third-party/search/algolia-search.js","hash":"ac401e3736d56a3c9cb85ab885744cce0b813c55","modified":1635140285494},{"_id":"public/js/third-party/math/mathjax.js","hash":"5c749b9c1c3bb738122d0516211ecff6496d4907","modified":1635140285494},{"_id":"public/js/third-party/statistics/firestore.js","hash":"0960f16107ed61452fb0dffc6ed22dc143de34ef","modified":1635140285494},{"_id":"public/js/third-party/tags/mermaid.js","hash":"aafb764c64f6cd5a48ad194adf65ac77078242b1","modified":1635140285494},{"_id":"public/js/third-party/statistics/lean-analytics.js","hash":"5a928990856b8e456f0663cf3b6b406733672e39","modified":1635140285494},{"_id":"public/js/third-party/tags/pdf.js","hash":"af78c22f0e61c8c8aa8794e585e0d632c6d4fcb8","modified":1635140285494},{"_id":"public/about/curry.jpg","hash":"4598d39f13a0c8293367b1bb88b431187ba0d513","modified":1635140285494},{"_id":"public/2021/09/25/TypeError-line-matchAll-is-not-a-function/image-20210925111618240.png","hash":"f677a40ab161565617222f8488c5a78b3aa12114","modified":1635140285494},{"_id":"public/2021/09/25/EACCES-permission-denied-access-usr-local-lib-node-modules/image-20210925105028907.png","hash":"ac2c48973e7f5da724b6d8754f4b403ef775c611","modified":1635140285494},{"_id":"public/2021/09/25/git-github-com-Permission-denied-publickey/image-20210925123231078.png","hash":"938bbaa0455a0d04cf501d4c80dc61d3f53762df","modified":1635140285494},{"_id":"public/2021/10/04/androidview的绘制流程/源码流程图.png","hash":"a0878e3e262b61cad4f1dcb82ba87e773dbe89e3","modified":1635140285494}],"Category":[{"name":"Android","_id":"ckv68b4oo0005qggsh1ythmtk"},{"name":"hexo","_id":"ckv68b4os000aqggsd8hdgi6h"},{"name":"Kotlin","_id":"ckv68b4p2000vqggsbix38vr0"},{"name":"git","_id":"ckv68b4p50013qggs7jc8f9t7"},{"name":"RN","_id":"ckv68b4pb001lqggsafspdsc0"},{"name":"随记","_id":"ckv68b4pj001qqggsf9zg5wfx"}],"Data":[],"Page":[{"title":"0.0","date":"2021-09-26T06:39:54.000Z","_content":"\n![curry](curry.jpg)\n\n","source":"about/index.md","raw":"---\ntitle: \"0.0\"\ndate: 2021-09-26 14:39:54\n---\n\n![curry](curry.jpg)\n\n","updated":"2021-10-08T08:41:46.464Z","path":"about/index.html","comments":1,"layout":"page","_id":"ckv68b4oe0000qggs2mvm5rwl","content":"<p><img src=\"/about/curry.jpg\" alt=\"curry\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/about/curry.jpg\" alt=\"curry\"></p>\n"},{"title":"分类","date":"2021-09-24T06:41:08.000Z","type":"categories","_content":"\n","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2021-09-24 14:41:08\ntype: categories\n---\n\n","updated":"2021-10-08T08:41:46.467Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckv68b4oj0001qggs40pzbily","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2021-09-24T06:43:00.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2021-09-24 14:43:00\ntype: tags\n---\n","updated":"2021-10-08T08:41:46.470Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckv68b4om0003qggsgpczb690","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"ArrayList是线程安全的么","date":"2021-10-22T02:56:58.000Z","_content":"\nhttps://www.cnblogs.com/skywang12345/p/java_threads_category.html\nhttps://blog.csdn.net/u010416101/article/details/88720974\n\n","source":"_posts/ArrayList是线程安全的么.md","raw":"title:  ArrayList是线程安全的么\ndate: 2021-10-22 10:56:58\ntags: Android\ncategories: Android\n\n------\n\nhttps://www.cnblogs.com/skywang12345/p/java_threads_category.html\nhttps://blog.csdn.net/u010416101/article/details/88720974\n\n","slug":"ArrayList是线程安全的么","published":1,"updated":"2021-10-22T07:34:22.244Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckv68b4ok0002qggs1iel0092","content":"<p><a href=\"https://www.cnblogs.com/skywang12345/p/java_threads_category.html\">https://www.cnblogs.com/skywang12345/p/java_threads_category.html</a><br><a href=\"https://blog.csdn.net/u010416101/article/details/88720974\">https://blog.csdn.net/u010416101/article/details/88720974</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p><a href=\"https://www.cnblogs.com/skywang12345/p/java_threads_category.html\">https://www.cnblogs.com/skywang12345/p/java_threads_category.html</a><br><a href=\"https://blog.csdn.net/u010416101/article/details/88720974\">https://blog.csdn.net/u010416101/article/details/88720974</a></p>\n"},{"title":"Error: Spawn failed","date":"2021-09-25T03:53:45.000Z","_content":"\n执行`hexo deploy`出现如下报错：\n\n```javascript\nfatal: in unpopulated submodule '.deploy_git'\nFATAL {\n  err: Error: Spawn failed\n      at ChildProcess.<anonymous> (/Volumes/curry/blog/node_modules/hexo-util/lib/spawn.js:51:21)\n      at ChildProcess.emit (events.js:400:28)\n      at Process.ChildProcess._handle.onexit (internal/child_process.js:277:12) {\n    code: 128\n  }\n} Something's wrong. Maybe you can find the solution here: %s https://hexo.io/docs/troubleshooting.html\n```\n\n**解决方式**\n\n```java\n//删除git提交内容文件夹\nrm -rf .deploy_git/\n\n//依次执行\ngit config --global core.autocrlf false\nhexo clean \nhexo generate   \nhexo deploy\n```\n\n> 执行过以上命令后，可能需要尝试多次`hexo deploy`（实际操作中我尝试了两次 0.0）\n","source":"_posts/Error-Spawn-failed.md","raw":"---\ntitle: 'Error: Spawn failed'\ndate: 2021-09-25 11:53:45\ntags: hexo\ncategories: hexo\n\n---\n\n执行`hexo deploy`出现如下报错：\n\n```javascript\nfatal: in unpopulated submodule '.deploy_git'\nFATAL {\n  err: Error: Spawn failed\n      at ChildProcess.<anonymous> (/Volumes/curry/blog/node_modules/hexo-util/lib/spawn.js:51:21)\n      at ChildProcess.emit (events.js:400:28)\n      at Process.ChildProcess._handle.onexit (internal/child_process.js:277:12) {\n    code: 128\n  }\n} Something's wrong. Maybe you can find the solution here: %s https://hexo.io/docs/troubleshooting.html\n```\n\n**解决方式**\n\n```java\n//删除git提交内容文件夹\nrm -rf .deploy_git/\n\n//依次执行\ngit config --global core.autocrlf false\nhexo clean \nhexo generate   \nhexo deploy\n```\n\n> 执行过以上命令后，可能需要尝试多次`hexo deploy`（实际操作中我尝试了两次 0.0）\n","slug":"Error-Spawn-failed","published":1,"updated":"2021-10-08T08:41:46.362Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckv68b4on0004qggs91ce8yna","content":"<p>执行<code>hexo deploy</code>出现如下报错：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fatal: <span class=\"keyword\">in</span> unpopulated submodule <span class=\"string\">&#x27;.deploy_git&#x27;</span></span><br><span class=\"line\">FATAL &#123;</span><br><span class=\"line\">  <span class=\"attr\">err</span>: <span class=\"built_in\">Error</span>: Spawn failed</span><br><span class=\"line\">      at ChildProcess.&lt;anonymous&gt; (<span class=\"regexp\">/Volumes/</span>curry/blog/node_modules/hexo-util/lib/spawn.js:<span class=\"number\">51</span>:<span class=\"number\">21</span>)</span><br><span class=\"line\">      at ChildProcess.emit (events.js:<span class=\"number\">400</span>:<span class=\"number\">28</span>)</span><br><span class=\"line\">      at Process.ChildProcess._handle.onexit (internal/child_process.js:<span class=\"number\">277</span>:<span class=\"number\">12</span>) &#123;</span><br><span class=\"line\">    <span class=\"attr\">code</span>: <span class=\"number\">128</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125; Something<span class=\"string\">&#x27;s wrong. Maybe you can find the solution here: %s https://hexo.io/docs/troubleshooting.html</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>解决方式</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//删除git提交内容文件夹</span></span><br><span class=\"line\">rm -rf .deploy_git/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//依次执行</span></span><br><span class=\"line\">git config --global core.autocrlf <span class=\"keyword\">false</span></span><br><span class=\"line\">hexo clean </span><br><span class=\"line\">hexo generate   </span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>执行过以上命令后，可能需要尝试多次<code>hexo deploy</code>（实际操作中我尝试了两次 0.0）</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<p>执行<code>hexo deploy</code>出现如下报错：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">fatal: <span class=\"keyword\">in</span> unpopulated submodule <span class=\"string\">&#x27;.deploy_git&#x27;</span></span><br><span class=\"line\">FATAL &#123;</span><br><span class=\"line\">  <span class=\"attr\">err</span>: <span class=\"built_in\">Error</span>: Spawn failed</span><br><span class=\"line\">      at ChildProcess.&lt;anonymous&gt; (<span class=\"regexp\">/Volumes/</span>curry/blog/node_modules/hexo-util/lib/spawn.js:<span class=\"number\">51</span>:<span class=\"number\">21</span>)</span><br><span class=\"line\">      at ChildProcess.emit (events.js:<span class=\"number\">400</span>:<span class=\"number\">28</span>)</span><br><span class=\"line\">      at Process.ChildProcess._handle.onexit (internal/child_process.js:<span class=\"number\">277</span>:<span class=\"number\">12</span>) &#123;</span><br><span class=\"line\">    <span class=\"attr\">code</span>: <span class=\"number\">128</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125; Something<span class=\"string\">&#x27;s wrong. Maybe you can find the solution here: %s https://hexo.io/docs/troubleshooting.html</span></span><br></pre></td></tr></table></figure>\n\n<p><strong>解决方式</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//删除git提交内容文件夹</span></span><br><span class=\"line\">rm -rf .deploy_git/</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//依次执行</span></span><br><span class=\"line\">git config --global core.autocrlf <span class=\"keyword\">false</span></span><br><span class=\"line\">hexo clean </span><br><span class=\"line\">hexo generate   </span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>执行过以上命令后，可能需要尝试多次<code>hexo deploy</code>（实际操作中我尝试了两次 0.0）</p>\n</blockquote>\n"},{"title":"EACCES: permission denied, access '/usr/local/lib/node_modules'","date":"2021-09-25T02:49:05.000Z","_content":"\n在Mac电脑上，执行`npm install -g hexo`，出现入下的报错：\n\n![image-20210925105028907](image-20210925105028907.png)\n\n提示没有权限；命令前加sudo即可：\n\n```\nsudo hexo install -g \n```\n\n","source":"_posts/EACCES-permission-denied-access-usr-local-lib-node-modules.md","raw":"---\ntitle: 'EACCES: permission denied, access ''/usr/local/lib/node_modules'''\ndate: 2021-09-25 10:49:05\ntags: hexo\ncategories: hexo\n\n---\n\n在Mac电脑上，执行`npm install -g hexo`，出现入下的报错：\n\n![image-20210925105028907](image-20210925105028907.png)\n\n提示没有权限；命令前加sudo即可：\n\n```\nsudo hexo install -g \n```\n\n","slug":"EACCES-permission-denied-access-usr-local-lib-node-modules","published":1,"updated":"2021-10-08T08:41:46.359Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckv68b4oq0007qggs30jrdov5","content":"<p>在Mac电脑上，执行<code>npm install -g hexo</code>，出现入下的报错：</p>\n<p><img src=\"/2021/09/25/EACCES-permission-denied-access-usr-local-lib-node-modules/image-20210925105028907.png\" alt=\"image-20210925105028907\"></p>\n<p>提示没有权限；命令前加sudo即可：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo hexo install -g </span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>在Mac电脑上，执行<code>npm install -g hexo</code>，出现入下的报错：</p>\n<p><img src=\"/2021/09/25/EACCES-permission-denied-access-usr-local-lib-node-modules/image-20210925105028907.png\" alt=\"image-20210925105028907\"></p>\n<p>提示没有权限；命令前加sudo即可：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo hexo install -g </span><br></pre></td></tr></table></figure>\n\n"},{"title":"Github+Hexo搭建笔记","date":"2021-09-18T08:51:31.000Z","_content":"\n#### **一. Github**\n\n1. gihub中创建仓库，仓库名为：<github昵称>.github.io\n\n   ![image-20210918165516634](image-20210918165516634.png)\n\n   >2021年8月13日之后github不在支持密码登录，使用**personal access token**替代\n   >\n   >在github的Settings -- Developer settings -- personal access token 中配置\n\n#### **二. Hexo**\n\n1. 安装hexo\n\n   ```javascript\n   npm install -g hexo\n   ```\n\n2. hexo初始化\n\n   ```javascript\n   hexo init\n   ```\n\n3. 本地运行命令\n\n   ```javascript\n   hexo s // hexo server\n   ```\n\n4. 部署到github，打开hexo文件夹中的_config.xml，文末添加deploy的对应内容，参考如下：\n\n   ```\n   # Deployment\n   ## Docs: https://hexo.io/docs/one-command-deployment\n   deploy:\n     type: git\n     repo: https://github.com/zhengcurry/zhengcurry.github.io\n     branch: master\n   ```\n\n   然后执行\n\n   ```javascript\n   npm install hexo-deployer-git --save\n   ```\n\n   部署：\n\n   ```undefined\n   hexo clean\n   \n   hexo deploy\n   ```\n\n5. 新建文章\n\n   ```\n   hexo new xxxx\n   ```\n\n6. 添加图片\n\n   ```undefined\n   npm install hexo-asset-image --save\n   ```\n\n   hexo文件夹中的_config.xml，把post_asset_folder值改为false\n\n   打开/node_modules/hexo-asset-image/index.js文件，替换如下\n\n   ```bash\n   'use strict';\n   var cheerio = require('cheerio');\n   \n   // http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string\n   function getPosition(str, m, i) {\n     return str.split(m, i).join(m).length;\n   }\n   \n   var version = String(hexo.version).split('.');\n   hexo.extend.filter.register('after_post_render', function(data){\n     var config = hexo.config;\n     if(config.post_asset_folder){\n           var link = data.permalink;\n       if(version.length > 0 && Number(version[0]) == 3)\n          var beginPos = getPosition(link, '/', 1) + 1;\n       else\n          var beginPos = getPosition(link, '/', 3) + 1;\n       // In hexo 3.1.1, the permalink of \"about\" page is like \".../about/index.html\".\n       var endPos = link.lastIndexOf('/') + 1;\n       link = link.substring(beginPos, endPos);\n   \n       var toprocess = ['excerpt', 'more', 'content'];\n       for(var i = 0; i < toprocess.length; i++){\n         var key = toprocess[i];\n    \n         var $ = cheerio.load(data[key], {\n           ignoreWhitespace: false,\n           xmlMode: false,\n           lowerCaseTags: false,\n           decodeEntities: false\n         });\n   \n         $('img').each(function(){\n           if ($(this).attr('src')){\n               // For windows style path, we replace '\\' to '/'.\n               var src = $(this).attr('src').replace('\\\\', '/');\n               if(!/http[s]*.*|\\/\\/.*/.test(src) &&\n                  !/^\\s*\\//.test(src)) {\n                 // For \"about\" page, the first part of \"src\" can't be removed.\n                 // In addition, to support multi-level local directory.\n                 var linkArray = link.split('/').filter(function(elem){\n                   return elem != '';\n                 });\n                 var srcArray = src.split('/').filter(function(elem){\n                   return elem != '' && elem != '.';\n                 });\n                 if(srcArray.length > 1)\n                   srcArray.shift();\n                 src = srcArray.join('/');\n                 $(this).attr('src', config.root + link + src);\n                 console.info&&console.info(\"update link as:-->\"+config.root + link + src);\n               }\n           }else{\n               console.info&&console.info(\"no src attr, skipped...\");\n               console.info&&console.info($(this));\n           }\n         });\n         data[key] = $.html();\n       }\n     }\n   });\n   ```\n\n   然后即可添加图片，参考[Typora](#Typora)\n\n   \n\n7. 删除文章\n\n   删除本地对应文件，然后执行如下命令\n\n   ```\n   hexo g\n   hexo d\n   ```\n\n####  **Typora**\n\n配置如下，将图片拖拽到md文档中，即可复制到指定目录下：\n\n![image-20210923104949941](image-20210923104949941.png)\n\n在md文档中，直接使用图片名称，预览或发布后即可看到图片\n\n![image-20210923105008730](image-20210923105008730.png)\n\n\n\n\n\n\n\n\n\n\n\n**参考：**\n\nhttps://www.jianshu.com/p/390f202c5b0e\n\nhttps://zhuanlan.zhihu.com/p/155996962\n\nhttps://www.jianshu.com/p/f72aaad7b852\n\n","source":"_posts/Github-Hexo搭建笔记.md","raw":"---\ntitle: Github+Hexo搭建笔记\ndate: 2021-09-18 16:51:31\ntags: hexo\ncategories: hexo\n---\n\n#### **一. Github**\n\n1. gihub中创建仓库，仓库名为：<github昵称>.github.io\n\n   ![image-20210918165516634](image-20210918165516634.png)\n\n   >2021年8月13日之后github不在支持密码登录，使用**personal access token**替代\n   >\n   >在github的Settings -- Developer settings -- personal access token 中配置\n\n#### **二. Hexo**\n\n1. 安装hexo\n\n   ```javascript\n   npm install -g hexo\n   ```\n\n2. hexo初始化\n\n   ```javascript\n   hexo init\n   ```\n\n3. 本地运行命令\n\n   ```javascript\n   hexo s // hexo server\n   ```\n\n4. 部署到github，打开hexo文件夹中的_config.xml，文末添加deploy的对应内容，参考如下：\n\n   ```\n   # Deployment\n   ## Docs: https://hexo.io/docs/one-command-deployment\n   deploy:\n     type: git\n     repo: https://github.com/zhengcurry/zhengcurry.github.io\n     branch: master\n   ```\n\n   然后执行\n\n   ```javascript\n   npm install hexo-deployer-git --save\n   ```\n\n   部署：\n\n   ```undefined\n   hexo clean\n   \n   hexo deploy\n   ```\n\n5. 新建文章\n\n   ```\n   hexo new xxxx\n   ```\n\n6. 添加图片\n\n   ```undefined\n   npm install hexo-asset-image --save\n   ```\n\n   hexo文件夹中的_config.xml，把post_asset_folder值改为false\n\n   打开/node_modules/hexo-asset-image/index.js文件，替换如下\n\n   ```bash\n   'use strict';\n   var cheerio = require('cheerio');\n   \n   // http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string\n   function getPosition(str, m, i) {\n     return str.split(m, i).join(m).length;\n   }\n   \n   var version = String(hexo.version).split('.');\n   hexo.extend.filter.register('after_post_render', function(data){\n     var config = hexo.config;\n     if(config.post_asset_folder){\n           var link = data.permalink;\n       if(version.length > 0 && Number(version[0]) == 3)\n          var beginPos = getPosition(link, '/', 1) + 1;\n       else\n          var beginPos = getPosition(link, '/', 3) + 1;\n       // In hexo 3.1.1, the permalink of \"about\" page is like \".../about/index.html\".\n       var endPos = link.lastIndexOf('/') + 1;\n       link = link.substring(beginPos, endPos);\n   \n       var toprocess = ['excerpt', 'more', 'content'];\n       for(var i = 0; i < toprocess.length; i++){\n         var key = toprocess[i];\n    \n         var $ = cheerio.load(data[key], {\n           ignoreWhitespace: false,\n           xmlMode: false,\n           lowerCaseTags: false,\n           decodeEntities: false\n         });\n   \n         $('img').each(function(){\n           if ($(this).attr('src')){\n               // For windows style path, we replace '\\' to '/'.\n               var src = $(this).attr('src').replace('\\\\', '/');\n               if(!/http[s]*.*|\\/\\/.*/.test(src) &&\n                  !/^\\s*\\//.test(src)) {\n                 // For \"about\" page, the first part of \"src\" can't be removed.\n                 // In addition, to support multi-level local directory.\n                 var linkArray = link.split('/').filter(function(elem){\n                   return elem != '';\n                 });\n                 var srcArray = src.split('/').filter(function(elem){\n                   return elem != '' && elem != '.';\n                 });\n                 if(srcArray.length > 1)\n                   srcArray.shift();\n                 src = srcArray.join('/');\n                 $(this).attr('src', config.root + link + src);\n                 console.info&&console.info(\"update link as:-->\"+config.root + link + src);\n               }\n           }else{\n               console.info&&console.info(\"no src attr, skipped...\");\n               console.info&&console.info($(this));\n           }\n         });\n         data[key] = $.html();\n       }\n     }\n   });\n   ```\n\n   然后即可添加图片，参考[Typora](#Typora)\n\n   \n\n7. 删除文章\n\n   删除本地对应文件，然后执行如下命令\n\n   ```\n   hexo g\n   hexo d\n   ```\n\n####  **Typora**\n\n配置如下，将图片拖拽到md文档中，即可复制到指定目录下：\n\n![image-20210923104949941](image-20210923104949941.png)\n\n在md文档中，直接使用图片名称，预览或发布后即可看到图片\n\n![image-20210923105008730](image-20210923105008730.png)\n\n\n\n\n\n\n\n\n\n\n\n**参考：**\n\nhttps://www.jianshu.com/p/390f202c5b0e\n\nhttps://zhuanlan.zhihu.com/p/155996962\n\nhttps://www.jianshu.com/p/f72aaad7b852\n\n","slug":"Github-Hexo搭建笔记","published":1,"updated":"2021-10-08T08:41:46.365Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckv68b4oq0008qggs3wgudxti","content":"<h4 id=\"一-Github\"><a href=\"#一-Github\" class=\"headerlink\" title=\"一. Github\"></a><strong>一. Github</strong></h4><ol>\n<li><p>gihub中创建仓库，仓库名为：&lt;github昵称&gt;.github.io</p>\n<p><img src=\"/2021/09/18/Github-Hexo%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/image-20210918165516634.png\" alt=\"image-20210918165516634\"></p>\n<blockquote>\n<p>2021年8月13日之后github不在支持密码登录，使用<strong>personal access token</strong>替代</p>\n<p>在github的Settings – Developer settings – personal access token 中配置</p>\n</blockquote>\n</li>\n</ol>\n<h4 id=\"二-Hexo\"><a href=\"#二-Hexo\" class=\"headerlink\" title=\"二. Hexo\"></a><strong>二. Hexo</strong></h4><ol>\n<li><p>安装hexo</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo</span><br></pre></td></tr></table></figure></li>\n<li><p>hexo初始化</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure></li>\n<li><p>本地运行命令</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s <span class=\"comment\">// hexo server</span></span><br></pre></td></tr></table></figure></li>\n<li><p>部署到github，打开hexo文件夹中的_config.xml，文末添加deploy的对应内容，参考如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Deployment</span><br><span class=\"line\">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https://github.com/zhengcurry/zhengcurry.github.io</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n\n<p>然后执行</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<p>部署：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\"></span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure></li>\n<li><p>新建文章</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new xxxx</span><br></pre></td></tr></table></figure></li>\n<li><p>添加图片</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure>\n\n<p>hexo文件夹中的_config.xml，把post_asset_folder值改为false</p>\n<p>打开/node_modules/hexo-asset-image/index.js文件，替换如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;use strict&#x27;</span>;</span><br><span class=\"line\">var cheerio = require(<span class=\"string\">&#x27;cheerio&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span><br><span class=\"line\"><span class=\"keyword\">function</span> getPosition(str, m, i) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> str.split(m, i).join(m).length;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">var version = String(hexo.version).split(<span class=\"string\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">&#x27;after_post_render&#x27;</span>, <span class=\"keyword\">function</span>(data)&#123;</span><br><span class=\"line\">  var config = hexo.config;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(config.post_asset_folder)&#123;</span><br><span class=\"line\">        var link = data.permalink;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(version.length &gt; 0 &amp;&amp; Number(version[0]) == 3)</span><br><span class=\"line\">       var beginPos = getPosition(link, <span class=\"string\">&#x27;/&#x27;</span>, 1) + 1;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">       var beginPos = getPosition(link, <span class=\"string\">&#x27;/&#x27;</span>, 3) + 1;</span><br><span class=\"line\">    // In hexo 3.1.1, the permalink of <span class=\"string\">&quot;about&quot;</span> page is like <span class=\"string\">&quot;.../about/index.html&quot;</span>.</span><br><span class=\"line\">    var endPos = link.lastIndexOf(<span class=\"string\">&#x27;/&#x27;</span>) + 1;</span><br><span class=\"line\">    link = link.substring(beginPos, endPos);</span><br><span class=\"line\"></span><br><span class=\"line\">    var toprocess = [<span class=\"string\">&#x27;excerpt&#x27;</span>, <span class=\"string\">&#x27;more&#x27;</span>, <span class=\"string\">&#x27;content&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(var i = 0; i &lt; toprocess.length; i++)&#123;</span><br><span class=\"line\">      var key = toprocess[i];</span><br><span class=\"line\"> </span><br><span class=\"line\">      var $ = cheerio.load(data[key], &#123;</span><br><span class=\"line\">        ignoreWhitespace: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        xmlMode: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        lowerCaseTags: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        decodeEntities: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      $(<span class=\"string\">&#x27;img&#x27;</span>).each(<span class=\"function\"><span class=\"title\">function</span></span>()&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($(this).attr(<span class=\"string\">&#x27;src&#x27;</span>))&#123;</span><br><span class=\"line\">            // For windows style path, we replace <span class=\"string\">&#x27;\\&#x27;</span> to <span class=\"string\">&#x27;/&#x27;</span>.</span><br><span class=\"line\">            var src = $(this).attr(<span class=\"string\">&#x27;src&#x27;</span>).replace(<span class=\"string\">&#x27;\\\\&#x27;</span>, <span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!/http[s]*.*|\\/\\/.*/.<span class=\"built_in\">test</span>(src) &amp;&amp;</span><br><span class=\"line\">               !/^\\s*\\//.<span class=\"built_in\">test</span>(src)) &#123;</span><br><span class=\"line\">              // For <span class=\"string\">&quot;about&quot;</span> page, the first part of <span class=\"string\">&quot;src&quot;</span> can<span class=\"string\">&#x27;t be removed.</span></span><br><span class=\"line\"><span class=\"string\">              // In addition, to support multi-level local directory.</span></span><br><span class=\"line\"><span class=\"string\">              var linkArray = link.split(&#x27;</span>/<span class=\"string\">&#x27;).filter(function(elem)&#123;</span></span><br><span class=\"line\"><span class=\"string\">                return elem != &#x27;</span><span class=\"string\">&#x27;;</span></span><br><span class=\"line\"><span class=\"string\">              &#125;);</span></span><br><span class=\"line\"><span class=\"string\">              var srcArray = src.split(&#x27;</span>/<span class=\"string\">&#x27;).filter(function(elem)&#123;</span></span><br><span class=\"line\"><span class=\"string\">                return elem != &#x27;</span><span class=\"string\">&#x27; &amp;&amp; elem != &#x27;</span>.<span class=\"string\">&#x27;;</span></span><br><span class=\"line\"><span class=\"string\">              &#125;);</span></span><br><span class=\"line\"><span class=\"string\">              if(srcArray.length &gt; 1)</span></span><br><span class=\"line\"><span class=\"string\">                srcArray.shift();</span></span><br><span class=\"line\"><span class=\"string\">              src = srcArray.join(&#x27;</span>/<span class=\"string\">&#x27;);</span></span><br><span class=\"line\"><span class=\"string\">              $(this).attr(&#x27;</span>src<span class=\"string\">&#x27;, config.root + link + src);</span></span><br><span class=\"line\"><span class=\"string\">              console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);</span></span><br><span class=\"line\"><span class=\"string\">            &#125;</span></span><br><span class=\"line\"><span class=\"string\">        &#125;else&#123;</span></span><br><span class=\"line\"><span class=\"string\">            console.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;);</span></span><br><span class=\"line\"><span class=\"string\">            console.info&amp;&amp;console.info($(this));</span></span><br><span class=\"line\"><span class=\"string\">        &#125;</span></span><br><span class=\"line\"><span class=\"string\">      &#125;);</span></span><br><span class=\"line\"><span class=\"string\">      data[key] = $.html();</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">  &#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;);</span></span><br></pre></td></tr></table></figure>\n\n<p>然后即可添加图片，参考<a href=\"#Typora\">Typora</a></p>\n</li>\n<li><p>删除文章</p>\n<p>删除本地对应文件，然后执行如下命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h4 id=\"Typora\"><a href=\"#Typora\" class=\"headerlink\" title=\"Typora\"></a><strong>Typora</strong></h4><p>配置如下，将图片拖拽到md文档中，即可复制到指定目录下：</p>\n<p><img src=\"/2021/09/18/Github-Hexo%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/image-20210923104949941.png\" alt=\"image-20210923104949941\"></p>\n<p>在md文档中，直接使用图片名称，预览或发布后即可看到图片</p>\n<p><img src=\"/2021/09/18/Github-Hexo%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/image-20210923105008730.png\" alt=\"image-20210923105008730\"></p>\n<p><strong>参考：</strong></p>\n<p><a href=\"https://www.jianshu.com/p/390f202c5b0e\">https://www.jianshu.com/p/390f202c5b0e</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/155996962\">https://zhuanlan.zhihu.com/p/155996962</a></p>\n<p><a href=\"https://www.jianshu.com/p/f72aaad7b852\">https://www.jianshu.com/p/f72aaad7b852</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"一-Github\"><a href=\"#一-Github\" class=\"headerlink\" title=\"一. Github\"></a><strong>一. Github</strong></h4><ol>\n<li><p>gihub中创建仓库，仓库名为：&lt;github昵称&gt;.github.io</p>\n<p><img src=\"/2021/09/18/Github-Hexo%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/image-20210918165516634.png\" alt=\"image-20210918165516634\"></p>\n<blockquote>\n<p>2021年8月13日之后github不在支持密码登录，使用<strong>personal access token</strong>替代</p>\n<p>在github的Settings – Developer settings – personal access token 中配置</p>\n</blockquote>\n</li>\n</ol>\n<h4 id=\"二-Hexo\"><a href=\"#二-Hexo\" class=\"headerlink\" title=\"二. Hexo\"></a><strong>二. Hexo</strong></h4><ol>\n<li><p>安装hexo</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install -g hexo</span><br></pre></td></tr></table></figure></li>\n<li><p>hexo初始化</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure></li>\n<li><p>本地运行命令</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo s <span class=\"comment\">// hexo server</span></span><br></pre></td></tr></table></figure></li>\n<li><p>部署到github，打开hexo文件夹中的_config.xml，文末添加deploy的对应内容，参考如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"># Deployment</span><br><span class=\"line\">## Docs: https://hexo.io/docs/one-command-deployment</span><br><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: https://github.com/zhengcurry/zhengcurry.github.io</span><br><span class=\"line\">  branch: master</span><br></pre></td></tr></table></figure>\n\n<p>然后执行</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<p>部署：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean</span><br><span class=\"line\"></span><br><span class=\"line\">hexo deploy</span><br></pre></td></tr></table></figure></li>\n<li><p>新建文章</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new xxxx</span><br></pre></td></tr></table></figure></li>\n<li><p>添加图片</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure>\n\n<p>hexo文件夹中的_config.xml，把post_asset_folder值改为false</p>\n<p>打开/node_modules/hexo-asset-image/index.js文件，替换如下</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">&#x27;use strict&#x27;</span>;</span><br><span class=\"line\">var cheerio = require(<span class=\"string\">&#x27;cheerio&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string</span><br><span class=\"line\"><span class=\"keyword\">function</span> getPosition(str, m, i) &#123;</span><br><span class=\"line\">  <span class=\"built_in\">return</span> str.split(m, i).join(m).length;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">var version = String(hexo.version).split(<span class=\"string\">&#x27;.&#x27;</span>);</span><br><span class=\"line\">hexo.extend.filter.register(<span class=\"string\">&#x27;after_post_render&#x27;</span>, <span class=\"keyword\">function</span>(data)&#123;</span><br><span class=\"line\">  var config = hexo.config;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(config.post_asset_folder)&#123;</span><br><span class=\"line\">        var link = data.permalink;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(version.length &gt; 0 &amp;&amp; Number(version[0]) == 3)</span><br><span class=\"line\">       var beginPos = getPosition(link, <span class=\"string\">&#x27;/&#x27;</span>, 1) + 1;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">       var beginPos = getPosition(link, <span class=\"string\">&#x27;/&#x27;</span>, 3) + 1;</span><br><span class=\"line\">    // In hexo 3.1.1, the permalink of <span class=\"string\">&quot;about&quot;</span> page is like <span class=\"string\">&quot;.../about/index.html&quot;</span>.</span><br><span class=\"line\">    var endPos = link.lastIndexOf(<span class=\"string\">&#x27;/&#x27;</span>) + 1;</span><br><span class=\"line\">    link = link.substring(beginPos, endPos);</span><br><span class=\"line\"></span><br><span class=\"line\">    var toprocess = [<span class=\"string\">&#x27;excerpt&#x27;</span>, <span class=\"string\">&#x27;more&#x27;</span>, <span class=\"string\">&#x27;content&#x27;</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(var i = 0; i &lt; toprocess.length; i++)&#123;</span><br><span class=\"line\">      var key = toprocess[i];</span><br><span class=\"line\"> </span><br><span class=\"line\">      var $ = cheerio.load(data[key], &#123;</span><br><span class=\"line\">        ignoreWhitespace: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        xmlMode: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        lowerCaseTags: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        decodeEntities: <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      $(<span class=\"string\">&#x27;img&#x27;</span>).each(<span class=\"function\"><span class=\"title\">function</span></span>()&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ($(this).attr(<span class=\"string\">&#x27;src&#x27;</span>))&#123;</span><br><span class=\"line\">            // For windows style path, we replace <span class=\"string\">&#x27;\\&#x27;</span> to <span class=\"string\">&#x27;/&#x27;</span>.</span><br><span class=\"line\">            var src = $(this).attr(<span class=\"string\">&#x27;src&#x27;</span>).replace(<span class=\"string\">&#x27;\\\\&#x27;</span>, <span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">if</span>(!/http[s]*.*|\\/\\/.*/.<span class=\"built_in\">test</span>(src) &amp;&amp;</span><br><span class=\"line\">               !/^\\s*\\//.<span class=\"built_in\">test</span>(src)) &#123;</span><br><span class=\"line\">              // For <span class=\"string\">&quot;about&quot;</span> page, the first part of <span class=\"string\">&quot;src&quot;</span> can<span class=\"string\">&#x27;t be removed.</span></span><br><span class=\"line\"><span class=\"string\">              // In addition, to support multi-level local directory.</span></span><br><span class=\"line\"><span class=\"string\">              var linkArray = link.split(&#x27;</span>/<span class=\"string\">&#x27;).filter(function(elem)&#123;</span></span><br><span class=\"line\"><span class=\"string\">                return elem != &#x27;</span><span class=\"string\">&#x27;;</span></span><br><span class=\"line\"><span class=\"string\">              &#125;);</span></span><br><span class=\"line\"><span class=\"string\">              var srcArray = src.split(&#x27;</span>/<span class=\"string\">&#x27;).filter(function(elem)&#123;</span></span><br><span class=\"line\"><span class=\"string\">                return elem != &#x27;</span><span class=\"string\">&#x27; &amp;&amp; elem != &#x27;</span>.<span class=\"string\">&#x27;;</span></span><br><span class=\"line\"><span class=\"string\">              &#125;);</span></span><br><span class=\"line\"><span class=\"string\">              if(srcArray.length &gt; 1)</span></span><br><span class=\"line\"><span class=\"string\">                srcArray.shift();</span></span><br><span class=\"line\"><span class=\"string\">              src = srcArray.join(&#x27;</span>/<span class=\"string\">&#x27;);</span></span><br><span class=\"line\"><span class=\"string\">              $(this).attr(&#x27;</span>src<span class=\"string\">&#x27;, config.root + link + src);</span></span><br><span class=\"line\"><span class=\"string\">              console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src);</span></span><br><span class=\"line\"><span class=\"string\">            &#125;</span></span><br><span class=\"line\"><span class=\"string\">        &#125;else&#123;</span></span><br><span class=\"line\"><span class=\"string\">            console.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;);</span></span><br><span class=\"line\"><span class=\"string\">            console.info&amp;&amp;console.info($(this));</span></span><br><span class=\"line\"><span class=\"string\">        &#125;</span></span><br><span class=\"line\"><span class=\"string\">      &#125;);</span></span><br><span class=\"line\"><span class=\"string\">      data[key] = $.html();</span></span><br><span class=\"line\"><span class=\"string\">    &#125;</span></span><br><span class=\"line\"><span class=\"string\">  &#125;</span></span><br><span class=\"line\"><span class=\"string\">&#125;);</span></span><br></pre></td></tr></table></figure>\n\n<p>然后即可添加图片，参考<a href=\"#Typora\">Typora</a></p>\n</li>\n<li><p>删除文章</p>\n<p>删除本地对应文件，然后执行如下命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo d</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h4 id=\"Typora\"><a href=\"#Typora\" class=\"headerlink\" title=\"Typora\"></a><strong>Typora</strong></h4><p>配置如下，将图片拖拽到md文档中，即可复制到指定目录下：</p>\n<p><img src=\"/2021/09/18/Github-Hexo%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/image-20210923104949941.png\" alt=\"image-20210923104949941\"></p>\n<p>在md文档中，直接使用图片名称，预览或发布后即可看到图片</p>\n<p><img src=\"/2021/09/18/Github-Hexo%E6%90%AD%E5%BB%BA%E7%AC%94%E8%AE%B0/image-20210923105008730.png\" alt=\"image-20210923105008730\"></p>\n<p><strong>参考：</strong></p>\n<p><a href=\"https://www.jianshu.com/p/390f202c5b0e\">https://www.jianshu.com/p/390f202c5b0e</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/155996962\">https://zhuanlan.zhihu.com/p/155996962</a></p>\n<p><a href=\"https://www.jianshu.com/p/f72aaad7b852\">https://www.jianshu.com/p/f72aaad7b852</a></p>\n"},{"title":"T.()->Unit","date":"2021-09-24T05:57:58.000Z","_content":"\nT.()->Unit相当于是给类T定义了一个扩展函数，该函数没有形参，没有返回值；\n\n```kotlin\ntypealias CallBack<T> = TestCallBack<T>.()->Unit\n\nfun test(callback:CallBack<T>){\n    val test = TestCallBack<T>()\n    test.callback()\n}\n```\n\n这里callback就相当于一个TestCallBack的扩展函数，所以可以test.callback()\n\n","source":"_posts/T-Unit.md","raw":"---\ntitle: T.()->Unit\ndate: 2021-09-24 13:57:58\ntags: Kotlin\ncategories: Kotlin\n---\n\nT.()->Unit相当于是给类T定义了一个扩展函数，该函数没有形参，没有返回值；\n\n```kotlin\ntypealias CallBack<T> = TestCallBack<T>.()->Unit\n\nfun test(callback:CallBack<T>){\n    val test = TestCallBack<T>()\n    test.callback()\n}\n```\n\n这里callback就相当于一个TestCallBack的扩展函数，所以可以test.callback()\n\n","slug":"T-Unit","published":1,"updated":"2021-10-08T08:41:46.368Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckv68b4or0009qggshijl7ie2","content":"<p>T.()-&gt;Unit相当于是给类T定义了一个扩展函数，该函数没有形参，没有返回值；</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typealias</span> CallBack&lt;T&gt; = TestCallBack&lt;T&gt;.()-&gt;<span class=\"built_in\">Unit</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">test</span><span class=\"params\">(callback:<span class=\"type\">CallBack</span>&lt;<span class=\"type\">T</span>&gt;)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">val</span> test = TestCallBack&lt;T&gt;()</span><br><span class=\"line\">    test.callback()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这里callback就相当于一个TestCallBack的扩展函数，所以可以test.callback()</p>\n","site":{"data":{}},"excerpt":"","more":"<p>T.()-&gt;Unit相当于是给类T定义了一个扩展函数，该函数没有形参，没有返回值；</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">typealias</span> CallBack&lt;T&gt; = TestCallBack&lt;T&gt;.()-&gt;<span class=\"built_in\">Unit</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">test</span><span class=\"params\">(callback:<span class=\"type\">CallBack</span>&lt;<span class=\"type\">T</span>&gt;)</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">val</span> test = TestCallBack&lt;T&gt;()</span><br><span class=\"line\">    test.callback()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这里callback就相当于一个TestCallBack的扩展函数，所以可以test.callback()</p>\n"},{"title":"Java常见的数据结构","date":"2021-10-22T02:19:36.000Z","_content":"\n#### **堆**\n\n#### **栈**\n#### **队列**\n#### **数组**\n#### **链表**\n#### **二叉树**\n#### **红黑树**\n\n\nhttps://www.jianshu.com/p/8e54797ec3e0\nhttps://zhuanlan.zhihu.com/p/63138829","source":"_posts/Java常见的数据结构.md","raw":"title: Java常见的数据结构\ndate: 2021-10-22 10:19:36\ntags: Android\ncategories: Android\n\n------\n\n#### **堆**\n\n#### **栈**\n#### **队列**\n#### **数组**\n#### **链表**\n#### **二叉树**\n#### **红黑树**\n\n\nhttps://www.jianshu.com/p/8e54797ec3e0\nhttps://zhuanlan.zhihu.com/p/63138829","slug":"Java常见的数据结构","published":1,"updated":"2021-10-22T07:36:42.480Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckv68b4ot000dqggs6gcz18nf","content":"<h4 id=\"堆\"><a href=\"#堆\" class=\"headerlink\" title=\"堆\"></a><strong>堆</strong></h4><h4 id=\"栈\"><a href=\"#栈\" class=\"headerlink\" title=\"栈\"></a><strong>栈</strong></h4><h4 id=\"队列\"><a href=\"#队列\" class=\"headerlink\" title=\"队列\"></a><strong>队列</strong></h4><h4 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a><strong>数组</strong></h4><h4 id=\"链表\"><a href=\"#链表\" class=\"headerlink\" title=\"链表\"></a><strong>链表</strong></h4><h4 id=\"二叉树\"><a href=\"#二叉树\" class=\"headerlink\" title=\"二叉树\"></a><strong>二叉树</strong></h4><h4 id=\"红黑树\"><a href=\"#红黑树\" class=\"headerlink\" title=\"红黑树\"></a><strong>红黑树</strong></h4><p><a href=\"https://www.jianshu.com/p/8e54797ec3e0\">https://www.jianshu.com/p/8e54797ec3e0</a><br><a href=\"https://zhuanlan.zhihu.com/p/63138829\">https://zhuanlan.zhihu.com/p/63138829</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"堆\"><a href=\"#堆\" class=\"headerlink\" title=\"堆\"></a><strong>堆</strong></h4><h4 id=\"栈\"><a href=\"#栈\" class=\"headerlink\" title=\"栈\"></a><strong>栈</strong></h4><h4 id=\"队列\"><a href=\"#队列\" class=\"headerlink\" title=\"队列\"></a><strong>队列</strong></h4><h4 id=\"数组\"><a href=\"#数组\" class=\"headerlink\" title=\"数组\"></a><strong>数组</strong></h4><h4 id=\"链表\"><a href=\"#链表\" class=\"headerlink\" title=\"链表\"></a><strong>链表</strong></h4><h4 id=\"二叉树\"><a href=\"#二叉树\" class=\"headerlink\" title=\"二叉树\"></a><strong>二叉树</strong></h4><h4 id=\"红黑树\"><a href=\"#红黑树\" class=\"headerlink\" title=\"红黑树\"></a><strong>红黑树</strong></h4><p><a href=\"https://www.jianshu.com/p/8e54797ec3e0\">https://www.jianshu.com/p/8e54797ec3e0</a><br><a href=\"https://zhuanlan.zhihu.com/p/63138829\">https://zhuanlan.zhihu.com/p/63138829</a></p>\n"},{"title":"TypeError: line.matchAll is not a function","date":"2021-09-25T03:14:32.000Z","categroies":"hexo","_content":"\n执行`hexo server`，报错：\n\n![image-20210925111618240](image-20210925111618240.png)\n\n\n\n此问题是node版本较老导致的；查看node版本，是v10.15.3，因此需要进行升级；\n\n**node升级（MAC）**\n\n1. 安装node版本管理模块\n\n   ```java\n   npm -g i -n\n   //mac电脑，若无权限，需执行：\n   sudo npm -g i -n\n   ```\n\n   \n\n2. 执行升级命令\n\n   ```java\n   n stable  //安装稳定版本\n   n latest  //安装最新版本\n   n (指定版本号)  //n 14.17.6\n   ```\n\n   \n\n","source":"_posts/TypeError-line-matchAll-is-not-a-function.md","raw":"---\ntitle: 'TypeError: line.matchAll is not a function'\ndate: 2021-09-25 11:14:32\ntags: hexo\ncategroies: hexo\n---\n\n执行`hexo server`，报错：\n\n![image-20210925111618240](image-20210925111618240.png)\n\n\n\n此问题是node版本较老导致的；查看node版本，是v10.15.3，因此需要进行升级；\n\n**node升级（MAC）**\n\n1. 安装node版本管理模块\n\n   ```java\n   npm -g i -n\n   //mac电脑，若无权限，需执行：\n   sudo npm -g i -n\n   ```\n\n   \n\n2. 执行升级命令\n\n   ```java\n   n stable  //安装稳定版本\n   n latest  //安装最新版本\n   n (指定版本号)  //n 14.17.6\n   ```\n\n   \n\n","slug":"TypeError-line-matchAll-is-not-a-function","published":1,"updated":"2021-10-08T08:41:46.371Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckv68b4ot000eqggs37c8dxpf","content":"<p>执行<code>hexo server</code>，报错：</p>\n<p><img src=\"/2021/09/25/TypeError-line-matchAll-is-not-a-function/image-20210925111618240.png\" alt=\"image-20210925111618240\"></p>\n<p>此问题是node版本较老导致的；查看node版本，是v10.15.3，因此需要进行升级；</p>\n<p><strong>node升级（MAC）</strong></p>\n<ol>\n<li><p>安装node版本管理模块</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm -g i -n</span><br><span class=\"line\"><span class=\"comment\">//mac电脑，若无权限，需执行：</span></span><br><span class=\"line\">sudo npm -g i -n</span><br></pre></td></tr></table></figure></li>\n<li><p>执行升级命令</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">n stable  <span class=\"comment\">//安装稳定版本</span></span><br><span class=\"line\">n latest  <span class=\"comment\">//安装最新版本</span></span><br><span class=\"line\">n (指定版本号)  <span class=\"comment\">//n 14.17.6</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<p>执行<code>hexo server</code>，报错：</p>\n<p><img src=\"/2021/09/25/TypeError-line-matchAll-is-not-a-function/image-20210925111618240.png\" alt=\"image-20210925111618240\"></p>\n<p>此问题是node版本较老导致的；查看node版本，是v10.15.3，因此需要进行升级；</p>\n<p><strong>node升级（MAC）</strong></p>\n<ol>\n<li><p>安装node版本管理模块</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm -g i -n</span><br><span class=\"line\"><span class=\"comment\">//mac电脑，若无权限，需执行：</span></span><br><span class=\"line\">sudo npm -g i -n</span><br></pre></td></tr></table></figure></li>\n<li><p>执行升级命令</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">n stable  <span class=\"comment\">//安装稳定版本</span></span><br><span class=\"line\">n latest  <span class=\"comment\">//安装最新版本</span></span><br><span class=\"line\">n (指定版本号)  <span class=\"comment\">//n 14.17.6</span></span><br></pre></td></tr></table></figure></li>\n</ol>\n"},{"title":"ViewModel如何数据共享","date":"2021-10-22T05:51:37.000Z","_content":"\n当我们创建一个ViewModel类，获取其实例是通过ViewModelProvider\n```\nval testViewModel = ViewModelProvider(this).get(TestViewModel::class.java)\n```\n或者采用kotlin中的viewModels\n```\nprivate val testViewModel by viewModels<TestViewModel>()\n```\n\nactivity和fragment组件之间的数据共享，这个不用多说，因为ViewModel是activity销毁的时候才clear，作用域是activity的生命周期，因此fragment可以持有同一个ViewModel的示例，从而共享activity的数据\n\n\n\nViewModelProvider(this) 的参数是ViewModelStoreOwner接口，ComponentActivity实现了ViewModelStoreOwner；由此把ViewModel和Activity关联起来\n\n\n\nViewModel的作用：\n\n```\nViewModel 是一个负责为Activity或Fragment准备和管理数据的类。 它还处理 Activity/Fragment 与应用程序其余部分的通信（例如调用业务逻辑类）。\nViewModel 始终与作用域（片段或活动）相关联地创建，并且只要作用域处于活动状态就会保留。 例如，如果它是一个活动，直到它完成。\n换句话说，这意味着如果 ViewModel 的所有者因配置更改（例如旋转）而被销毁，则它不会被销毁。 新的所有者实例只是重新连接到现有模型。\nViewModel 的目的是获取和保存 Activity 或 Fragment 所需的信息。 Activity 或 Fragment 应该能够观察到 ViewModel 中的变化。 ViewModel 通常通过LiveData或 Android 数据绑定公开这些信息。 您还可以使用您喜欢的框架中的任何可观察性构造。\nViewModel 的唯一职责是管理 UI 的数据。 它永远不应该访问您的视图层次结构或保留对 Activity 或 Fragment 的引用。\n```\n\n- 1.规范化了`ViewModel`的基类；\n- 2.`ViewModel`不会随着`Activity`的屏幕旋转而销毁；\n- 3.在对应的作用域内，保正只生产出对应的唯一实例，保证UI组件间的通信\n\n\n\n\n\n**如何实现屏幕旋转数据也会保存的？**\n\n```java\n//----ComponentActivity\t\n\t/**\n     * Retain all appropriate non-config state.  You can NOT\n     * override this yourself!  Use a {@link androidx.lifecycle.ViewModel} if you want to\n     * retain your own non config state.\n     * 保留所有适当的非配置状态。 你不能自己覆盖它！ \n     * 如果您想保留自己的非配置状态，请使用androidx.lifecycle.ViewModel \n     */\n    @Override\n    @Nullable\n\t//保留非配置实例\n    public final Object onRetainNonConfigurationInstance() {\n        Object custom = onRetainCustomNonConfigurationInstance();\n\n        ViewModelStore viewModelStore = mViewModelStore;\n        if (viewModelStore == null) {\n            // No one called getViewModelStore(), so see if there was an existing\n            // ViewModelStore from our last NonConfigurationInstance\n            NonConfigurationInstances nc =\n                    (NonConfigurationInstances) getLastNonConfigurationInstance();\n            if (nc != null) {\n                viewModelStore = nc.viewModelStore;\n            }\n        }\n\n        if (viewModelStore == null && custom == null) {\n            return null;\n        }\n\n        NonConfigurationInstances nci = new NonConfigurationInstances();\n        nci.custom = custom;\n        nci.viewModelStore = viewModelStore;\n        return nci;\n    }\n\n\t/**\n     * Returns the {@link ViewModelStore} associated with this activity\n     * <p>\n     * 返回与此activity关联的ViewModelStore\n     */\n    @NonNull\n    @Override\n    public ViewModelStore getViewModelStore() {\n        ...\n        if (mViewModelStore == null) {\n            NonConfigurationInstances nc =\n                    (NonConfigurationInstances) getLastNonConfigurationInstance();\n            if (nc != null) {\n                // Restore the ViewModelStore from NonConfigurationInstances\n                mViewModelStore = nc.viewModelStore;\n            }\n            if (mViewModelStore == null) {\n                mViewModelStore = new ViewModelStore();\n            }\n        }\n        return mViewModelStore;\n    }\n```\n\n根据上面ComponentActivity中的源码，可以看到当调用getViewModelStore（）时，会先去获取之前的实例getLastNonConfigurationInstance()，也是就是我们ViewModel中的数据，而方法onRetainNonConfigurationInstance（）是覆写的，其触发方式，父类Activity中的方法注释也指出`Called by the system`\n\n\n\n\n\n\n\n```java\n/**\n     * Returns an existing ViewModel or creates a new one in the scope (usually, a fragment or\n     * an activity), associated with this {@code ViewModelProvider}.\n     * <p>\n     * The created ViewModel is associated with the given scope and will be retained\n     * as long as the scope is alive (e.g. if it is an activity, until it is\n     * finished or process is killed).\n     */\n    @NonNull\n    @MainThread\n    public <T extends ViewModel> T get(@NonNull Class<T> modelClass) {\n        String canonicalName = modelClass.getCanonicalName();\n        if (canonicalName == null) {\n            throw new IllegalArgumentException(\"Local and anonymous classes can not be ViewModels\");\n        }\n        return get(DEFAULT_KEY + \":\" + canonicalName, modelClass);\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    @NonNull\n    @MainThread\n    public <T extends ViewModel> T get(@NonNull String key, @NonNull Class<T> modelClass) {\n        ViewModel viewModel = mViewModelStore.get(key);\n\n        if (modelClass.isInstance(viewModel)) {\n            if (mFactory instanceof OnRequeryFactory) {\n                ((OnRequeryFactory) mFactory).onRequery(viewModel);\n            }\n            return (T) viewModel;\n        } else {\n            //noinspection StatementWithEmptyBody\n            if (viewModel != null) {\n                // TODO: log a warning.\n            }\n        }\n        if (mFactory instanceof KeyedFactory) {\n            viewModel = ((KeyedFactory) mFactory).create(key, modelClass);\n        } else {\n            viewModel = mFactory.create(modelClass);\n        }\n        mViewModelStore.put(key, viewModel);\n        return (T) viewModel;\n    }\n```\n\n\n\nViewModel和ViewModelStore的源码都很简单\n\n\n\nViewModelStore内部就是HashMap存储ViewModel\n\n```java\npublic class ViewModelStore {\n\n    private final HashMap<String, ViewModel> mMap = new HashMap<>();\n\n    final void put(String key, ViewModel viewModel) {\n        ViewModel oldViewModel = mMap.put(key, viewModel);\n        if (oldViewModel != null) {\n            oldViewModel.onCleared();\n        }\n    }\n\n    final ViewModel get(String key) {\n        return mMap.get(key);\n    }\n\n    Set<String> keys() {\n        return new HashSet<>(mMap.keySet());\n    }\n\n    /**\n     *  Clears internal storage and notifies ViewModels that they are no longer used.\n     */\n    public final void clear() {\n        for (ViewModel vm : mMap.values()) {\n            vm.clear();\n        }\n        mMap.clear();\n    }\n}\n```\n\n","source":"_posts/ViewModel如何数据共享.md","raw":"title: ViewModel如何数据共享\ndate: 2021-10-22 13:51:37\ntags: Android\ncategories: Android\n\n------\n\n当我们创建一个ViewModel类，获取其实例是通过ViewModelProvider\n```\nval testViewModel = ViewModelProvider(this).get(TestViewModel::class.java)\n```\n或者采用kotlin中的viewModels\n```\nprivate val testViewModel by viewModels<TestViewModel>()\n```\n\nactivity和fragment组件之间的数据共享，这个不用多说，因为ViewModel是activity销毁的时候才clear，作用域是activity的生命周期，因此fragment可以持有同一个ViewModel的示例，从而共享activity的数据\n\n\n\nViewModelProvider(this) 的参数是ViewModelStoreOwner接口，ComponentActivity实现了ViewModelStoreOwner；由此把ViewModel和Activity关联起来\n\n\n\nViewModel的作用：\n\n```\nViewModel 是一个负责为Activity或Fragment准备和管理数据的类。 它还处理 Activity/Fragment 与应用程序其余部分的通信（例如调用业务逻辑类）。\nViewModel 始终与作用域（片段或活动）相关联地创建，并且只要作用域处于活动状态就会保留。 例如，如果它是一个活动，直到它完成。\n换句话说，这意味着如果 ViewModel 的所有者因配置更改（例如旋转）而被销毁，则它不会被销毁。 新的所有者实例只是重新连接到现有模型。\nViewModel 的目的是获取和保存 Activity 或 Fragment 所需的信息。 Activity 或 Fragment 应该能够观察到 ViewModel 中的变化。 ViewModel 通常通过LiveData或 Android 数据绑定公开这些信息。 您还可以使用您喜欢的框架中的任何可观察性构造。\nViewModel 的唯一职责是管理 UI 的数据。 它永远不应该访问您的视图层次结构或保留对 Activity 或 Fragment 的引用。\n```\n\n- 1.规范化了`ViewModel`的基类；\n- 2.`ViewModel`不会随着`Activity`的屏幕旋转而销毁；\n- 3.在对应的作用域内，保正只生产出对应的唯一实例，保证UI组件间的通信\n\n\n\n\n\n**如何实现屏幕旋转数据也会保存的？**\n\n```java\n//----ComponentActivity\t\n\t/**\n     * Retain all appropriate non-config state.  You can NOT\n     * override this yourself!  Use a {@link androidx.lifecycle.ViewModel} if you want to\n     * retain your own non config state.\n     * 保留所有适当的非配置状态。 你不能自己覆盖它！ \n     * 如果您想保留自己的非配置状态，请使用androidx.lifecycle.ViewModel \n     */\n    @Override\n    @Nullable\n\t//保留非配置实例\n    public final Object onRetainNonConfigurationInstance() {\n        Object custom = onRetainCustomNonConfigurationInstance();\n\n        ViewModelStore viewModelStore = mViewModelStore;\n        if (viewModelStore == null) {\n            // No one called getViewModelStore(), so see if there was an existing\n            // ViewModelStore from our last NonConfigurationInstance\n            NonConfigurationInstances nc =\n                    (NonConfigurationInstances) getLastNonConfigurationInstance();\n            if (nc != null) {\n                viewModelStore = nc.viewModelStore;\n            }\n        }\n\n        if (viewModelStore == null && custom == null) {\n            return null;\n        }\n\n        NonConfigurationInstances nci = new NonConfigurationInstances();\n        nci.custom = custom;\n        nci.viewModelStore = viewModelStore;\n        return nci;\n    }\n\n\t/**\n     * Returns the {@link ViewModelStore} associated with this activity\n     * <p>\n     * 返回与此activity关联的ViewModelStore\n     */\n    @NonNull\n    @Override\n    public ViewModelStore getViewModelStore() {\n        ...\n        if (mViewModelStore == null) {\n            NonConfigurationInstances nc =\n                    (NonConfigurationInstances) getLastNonConfigurationInstance();\n            if (nc != null) {\n                // Restore the ViewModelStore from NonConfigurationInstances\n                mViewModelStore = nc.viewModelStore;\n            }\n            if (mViewModelStore == null) {\n                mViewModelStore = new ViewModelStore();\n            }\n        }\n        return mViewModelStore;\n    }\n```\n\n根据上面ComponentActivity中的源码，可以看到当调用getViewModelStore（）时，会先去获取之前的实例getLastNonConfigurationInstance()，也是就是我们ViewModel中的数据，而方法onRetainNonConfigurationInstance（）是覆写的，其触发方式，父类Activity中的方法注释也指出`Called by the system`\n\n\n\n\n\n\n\n```java\n/**\n     * Returns an existing ViewModel or creates a new one in the scope (usually, a fragment or\n     * an activity), associated with this {@code ViewModelProvider}.\n     * <p>\n     * The created ViewModel is associated with the given scope and will be retained\n     * as long as the scope is alive (e.g. if it is an activity, until it is\n     * finished or process is killed).\n     */\n    @NonNull\n    @MainThread\n    public <T extends ViewModel> T get(@NonNull Class<T> modelClass) {\n        String canonicalName = modelClass.getCanonicalName();\n        if (canonicalName == null) {\n            throw new IllegalArgumentException(\"Local and anonymous classes can not be ViewModels\");\n        }\n        return get(DEFAULT_KEY + \":\" + canonicalName, modelClass);\n    }\n\n    @SuppressWarnings(\"unchecked\")\n    @NonNull\n    @MainThread\n    public <T extends ViewModel> T get(@NonNull String key, @NonNull Class<T> modelClass) {\n        ViewModel viewModel = mViewModelStore.get(key);\n\n        if (modelClass.isInstance(viewModel)) {\n            if (mFactory instanceof OnRequeryFactory) {\n                ((OnRequeryFactory) mFactory).onRequery(viewModel);\n            }\n            return (T) viewModel;\n        } else {\n            //noinspection StatementWithEmptyBody\n            if (viewModel != null) {\n                // TODO: log a warning.\n            }\n        }\n        if (mFactory instanceof KeyedFactory) {\n            viewModel = ((KeyedFactory) mFactory).create(key, modelClass);\n        } else {\n            viewModel = mFactory.create(modelClass);\n        }\n        mViewModelStore.put(key, viewModel);\n        return (T) viewModel;\n    }\n```\n\n\n\nViewModel和ViewModelStore的源码都很简单\n\n\n\nViewModelStore内部就是HashMap存储ViewModel\n\n```java\npublic class ViewModelStore {\n\n    private final HashMap<String, ViewModel> mMap = new HashMap<>();\n\n    final void put(String key, ViewModel viewModel) {\n        ViewModel oldViewModel = mMap.put(key, viewModel);\n        if (oldViewModel != null) {\n            oldViewModel.onCleared();\n        }\n    }\n\n    final ViewModel get(String key) {\n        return mMap.get(key);\n    }\n\n    Set<String> keys() {\n        return new HashSet<>(mMap.keySet());\n    }\n\n    /**\n     *  Clears internal storage and notifies ViewModels that they are no longer used.\n     */\n    public final void clear() {\n        for (ViewModel vm : mMap.values()) {\n            vm.clear();\n        }\n        mMap.clear();\n    }\n}\n```\n\n","slug":"ViewModel如何数据共享","published":1,"updated":"2021-10-22T07:53:13.792Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckv68b4ow000jqggsfwnpbdqx","content":"<p>当我们创建一个ViewModel类，获取其实例是通过ViewModelProvider</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val testViewModel = ViewModelProvider(this).get(TestViewModel::class.java)</span><br></pre></td></tr></table></figure>\n<p>或者采用kotlin中的viewModels</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private val testViewModel by viewModels&lt;TestViewModel&gt;()</span><br></pre></td></tr></table></figure>\n\n<p>activity和fragment组件之间的数据共享，这个不用多说，因为ViewModel是activity销毁的时候才clear，作用域是activity的生命周期，因此fragment可以持有同一个ViewModel的示例，从而共享activity的数据</p>\n<p>ViewModelProvider(this) 的参数是ViewModelStoreOwner接口，ComponentActivity实现了ViewModelStoreOwner；由此把ViewModel和Activity关联起来</p>\n<p>ViewModel的作用：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ViewModel 是一个负责为Activity或Fragment准备和管理数据的类。 它还处理 Activity/Fragment 与应用程序其余部分的通信（例如调用业务逻辑类）。</span><br><span class=\"line\">ViewModel 始终与作用域（片段或活动）相关联地创建，并且只要作用域处于活动状态就会保留。 例如，如果它是一个活动，直到它完成。</span><br><span class=\"line\">换句话说，这意味着如果 ViewModel 的所有者因配置更改（例如旋转）而被销毁，则它不会被销毁。 新的所有者实例只是重新连接到现有模型。</span><br><span class=\"line\">ViewModel 的目的是获取和保存 Activity 或 Fragment 所需的信息。 Activity 或 Fragment 应该能够观察到 ViewModel 中的变化。 ViewModel 通常通过LiveData或 Android 数据绑定公开这些信息。 您还可以使用您喜欢的框架中的任何可观察性构造。</span><br><span class=\"line\">ViewModel 的唯一职责是管理 UI 的数据。 它永远不应该访问您的视图层次结构或保留对 Activity 或 Fragment 的引用。</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>1.规范化了<code>ViewModel</code>的基类；</li>\n<li>2.<code>ViewModel</code>不会随着<code>Activity</code>的屏幕旋转而销毁；</li>\n<li>3.在对应的作用域内，保正只生产出对应的唯一实例，保证UI组件间的通信</li>\n</ul>\n<p><strong>如何实现屏幕旋转数据也会保存的？</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//----ComponentActivity\t</span></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Retain all appropriate non-config state.  You can NOT</span></span><br><span class=\"line\"><span class=\"comment\">     * override this yourself!  Use a &#123;<span class=\"doctag\">@link</span> androidx.lifecycle.ViewModel&#125; if you want to</span></span><br><span class=\"line\"><span class=\"comment\">     * retain your own non config state.</span></span><br><span class=\"line\"><span class=\"comment\">     * 保留所有适当的非配置状态。 你不能自己覆盖它！ </span></span><br><span class=\"line\"><span class=\"comment\">     * 如果您想保留自己的非配置状态，请使用androidx.lifecycle.ViewModel </span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"meta\">@Nullable</span></span><br><span class=\"line\">\t<span class=\"comment\">//保留非配置实例</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> Object <span class=\"title\">onRetainNonConfigurationInstance</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        Object custom = onRetainCustomNonConfigurationInstance();</span><br><span class=\"line\"></span><br><span class=\"line\">        ViewModelStore viewModelStore = mViewModelStore;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (viewModelStore == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// No one called getViewModelStore(), so see if there was an existing</span></span><br><span class=\"line\">            <span class=\"comment\">// ViewModelStore from our last NonConfigurationInstance</span></span><br><span class=\"line\">            NonConfigurationInstances nc =</span><br><span class=\"line\">                    (NonConfigurationInstances) getLastNonConfigurationInstance();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nc != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                viewModelStore = nc.viewModelStore;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (viewModelStore == <span class=\"keyword\">null</span> &amp;&amp; custom == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        NonConfigurationInstances nci = <span class=\"keyword\">new</span> NonConfigurationInstances();</span><br><span class=\"line\">        nci.custom = custom;</span><br><span class=\"line\">        nci.viewModelStore = viewModelStore;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> nci;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Returns the &#123;<span class=\"doctag\">@link</span> ViewModelStore&#125; associated with this activity</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;p&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * 返回与此activity关联的ViewModelStore</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@NonNull</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ViewModelStore <span class=\"title\">getViewModelStore</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mViewModelStore == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            NonConfigurationInstances nc =</span><br><span class=\"line\">                    (NonConfigurationInstances) getLastNonConfigurationInstance();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nc != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// Restore the ViewModelStore from NonConfigurationInstances</span></span><br><span class=\"line\">                mViewModelStore = nc.viewModelStore;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mViewModelStore == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                mViewModelStore = <span class=\"keyword\">new</span> ViewModelStore();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mViewModelStore;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>根据上面ComponentActivity中的源码，可以看到当调用getViewModelStore（）时，会先去获取之前的实例getLastNonConfigurationInstance()，也是就是我们ViewModel中的数据，而方法onRetainNonConfigurationInstance（）是覆写的，其触发方式，父类Activity中的方法注释也指出<code>Called by the system</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Returns an existing ViewModel or creates a new one in the scope (usually, a fragment or</span></span><br><span class=\"line\"><span class=\"comment\">     * an activity), associated with this &#123;<span class=\"doctag\">@code</span> ViewModelProvider&#125;.</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;p&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * The created ViewModel is associated with the given scope and will be retained</span></span><br><span class=\"line\"><span class=\"comment\">     * as long as the scope is alive (e.g. if it is an activity, until it is</span></span><br><span class=\"line\"><span class=\"comment\">     * finished or process is killed).</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@NonNull</span></span><br><span class=\"line\">    <span class=\"meta\">@MainThread</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T extends ViewModel&gt; <span class=\"function\">T <span class=\"title\">get</span><span class=\"params\">(<span class=\"meta\">@NonNull</span> Class&lt;T&gt; modelClass)</span> </span>&#123;</span><br><span class=\"line\">        String canonicalName = modelClass.getCanonicalName();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (canonicalName == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalArgumentException(<span class=\"string\">&quot;Local and anonymous classes can not be ViewModels&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> get(DEFAULT_KEY + <span class=\"string\">&quot;:&quot;</span> + canonicalName, modelClass);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@NonNull</span></span><br><span class=\"line\">    <span class=\"meta\">@MainThread</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T extends ViewModel&gt; <span class=\"function\">T <span class=\"title\">get</span><span class=\"params\">(<span class=\"meta\">@NonNull</span> String key, <span class=\"meta\">@NonNull</span> Class&lt;T&gt; modelClass)</span> </span>&#123;</span><br><span class=\"line\">        ViewModel viewModel = mViewModelStore.get(key);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (modelClass.isInstance(viewModel)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mFactory <span class=\"keyword\">instanceof</span> OnRequeryFactory) &#123;</span><br><span class=\"line\">                ((OnRequeryFactory) mFactory).onRequery(viewModel);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> (T) viewModel;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//noinspection StatementWithEmptyBody</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (viewModel != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// <span class=\"doctag\">TODO:</span> log a warning.</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mFactory <span class=\"keyword\">instanceof</span> KeyedFactory) &#123;</span><br><span class=\"line\">            viewModel = ((KeyedFactory) mFactory).create(key, modelClass);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            viewModel = mFactory.create(modelClass);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        mViewModelStore.put(key, viewModel);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (T) viewModel;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>ViewModel和ViewModelStore的源码都很简单</p>\n<p>ViewModelStore内部就是HashMap存储ViewModel</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ViewModelStore</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> HashMap&lt;String, ViewModel&gt; mMap = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">final</span> <span class=\"keyword\">void</span> <span class=\"title\">put</span><span class=\"params\">(String key, ViewModel viewModel)</span> </span>&#123;</span><br><span class=\"line\">        ViewModel oldViewModel = mMap.put(key, viewModel);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (oldViewModel != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            oldViewModel.onCleared();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">final</span> ViewModel <span class=\"title\">get</span><span class=\"params\">(String key)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mMap.get(key);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">Set&lt;String&gt; <span class=\"title\">keys</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> HashSet&lt;&gt;(mMap.keySet());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     *  Clears internal storage and notifies ViewModels that they are no longer used.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (ViewModel vm : mMap.values()) &#123;</span><br><span class=\"line\">            vm.clear();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        mMap.clear();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n","site":{"data":{}},"excerpt":"","more":"<p>当我们创建一个ViewModel类，获取其实例是通过ViewModelProvider</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">val testViewModel = ViewModelProvider(this).get(TestViewModel::class.java)</span><br></pre></td></tr></table></figure>\n<p>或者采用kotlin中的viewModels</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">private val testViewModel by viewModels&lt;TestViewModel&gt;()</span><br></pre></td></tr></table></figure>\n\n<p>activity和fragment组件之间的数据共享，这个不用多说，因为ViewModel是activity销毁的时候才clear，作用域是activity的生命周期，因此fragment可以持有同一个ViewModel的示例，从而共享activity的数据</p>\n<p>ViewModelProvider(this) 的参数是ViewModelStoreOwner接口，ComponentActivity实现了ViewModelStoreOwner；由此把ViewModel和Activity关联起来</p>\n<p>ViewModel的作用：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ViewModel 是一个负责为Activity或Fragment准备和管理数据的类。 它还处理 Activity/Fragment 与应用程序其余部分的通信（例如调用业务逻辑类）。</span><br><span class=\"line\">ViewModel 始终与作用域（片段或活动）相关联地创建，并且只要作用域处于活动状态就会保留。 例如，如果它是一个活动，直到它完成。</span><br><span class=\"line\">换句话说，这意味着如果 ViewModel 的所有者因配置更改（例如旋转）而被销毁，则它不会被销毁。 新的所有者实例只是重新连接到现有模型。</span><br><span class=\"line\">ViewModel 的目的是获取和保存 Activity 或 Fragment 所需的信息。 Activity 或 Fragment 应该能够观察到 ViewModel 中的变化。 ViewModel 通常通过LiveData或 Android 数据绑定公开这些信息。 您还可以使用您喜欢的框架中的任何可观察性构造。</span><br><span class=\"line\">ViewModel 的唯一职责是管理 UI 的数据。 它永远不应该访问您的视图层次结构或保留对 Activity 或 Fragment 的引用。</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>1.规范化了<code>ViewModel</code>的基类；</li>\n<li>2.<code>ViewModel</code>不会随着<code>Activity</code>的屏幕旋转而销毁；</li>\n<li>3.在对应的作用域内，保正只生产出对应的唯一实例，保证UI组件间的通信</li>\n</ul>\n<p><strong>如何实现屏幕旋转数据也会保存的？</strong></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//----ComponentActivity\t</span></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Retain all appropriate non-config state.  You can NOT</span></span><br><span class=\"line\"><span class=\"comment\">     * override this yourself!  Use a &#123;<span class=\"doctag\">@link</span> androidx.lifecycle.ViewModel&#125; if you want to</span></span><br><span class=\"line\"><span class=\"comment\">     * retain your own non config state.</span></span><br><span class=\"line\"><span class=\"comment\">     * 保留所有适当的非配置状态。 你不能自己覆盖它！ </span></span><br><span class=\"line\"><span class=\"comment\">     * 如果您想保留自己的非配置状态，请使用androidx.lifecycle.ViewModel </span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"meta\">@Nullable</span></span><br><span class=\"line\">\t<span class=\"comment\">//保留非配置实例</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> Object <span class=\"title\">onRetainNonConfigurationInstance</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        Object custom = onRetainCustomNonConfigurationInstance();</span><br><span class=\"line\"></span><br><span class=\"line\">        ViewModelStore viewModelStore = mViewModelStore;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (viewModelStore == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// No one called getViewModelStore(), so see if there was an existing</span></span><br><span class=\"line\">            <span class=\"comment\">// ViewModelStore from our last NonConfigurationInstance</span></span><br><span class=\"line\">            NonConfigurationInstances nc =</span><br><span class=\"line\">                    (NonConfigurationInstances) getLastNonConfigurationInstance();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nc != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                viewModelStore = nc.viewModelStore;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (viewModelStore == <span class=\"keyword\">null</span> &amp;&amp; custom == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        NonConfigurationInstances nci = <span class=\"keyword\">new</span> NonConfigurationInstances();</span><br><span class=\"line\">        nci.custom = custom;</span><br><span class=\"line\">        nci.viewModelStore = viewModelStore;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> nci;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Returns the &#123;<span class=\"doctag\">@link</span> ViewModelStore&#125; associated with this activity</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;p&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * 返回与此activity关联的ViewModelStore</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@NonNull</span></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> ViewModelStore <span class=\"title\">getViewModelStore</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        ...</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mViewModelStore == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            NonConfigurationInstances nc =</span><br><span class=\"line\">                    (NonConfigurationInstances) getLastNonConfigurationInstance();</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nc != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// Restore the ViewModelStore from NonConfigurationInstances</span></span><br><span class=\"line\">                mViewModelStore = nc.viewModelStore;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mViewModelStore == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                mViewModelStore = <span class=\"keyword\">new</span> ViewModelStore();</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mViewModelStore;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<p>根据上面ComponentActivity中的源码，可以看到当调用getViewModelStore（）时，会先去获取之前的实例getLastNonConfigurationInstance()，也是就是我们ViewModel中的数据，而方法onRetainNonConfigurationInstance（）是覆写的，其触发方式，父类Activity中的方法注释也指出<code>Called by the system</code></p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * Returns an existing ViewModel or creates a new one in the scope (usually, a fragment or</span></span><br><span class=\"line\"><span class=\"comment\">     * an activity), associated with this &#123;<span class=\"doctag\">@code</span> ViewModelProvider&#125;.</span></span><br><span class=\"line\"><span class=\"comment\">     * &lt;p&gt;</span></span><br><span class=\"line\"><span class=\"comment\">     * The created ViewModel is associated with the given scope and will be retained</span></span><br><span class=\"line\"><span class=\"comment\">     * as long as the scope is alive (e.g. if it is an activity, until it is</span></span><br><span class=\"line\"><span class=\"comment\">     * finished or process is killed).</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"meta\">@NonNull</span></span><br><span class=\"line\">    <span class=\"meta\">@MainThread</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T extends ViewModel&gt; <span class=\"function\">T <span class=\"title\">get</span><span class=\"params\">(<span class=\"meta\">@NonNull</span> Class&lt;T&gt; modelClass)</span> </span>&#123;</span><br><span class=\"line\">        String canonicalName = modelClass.getCanonicalName();</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (canonicalName == <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalArgumentException(<span class=\"string\">&quot;Local and anonymous classes can not be ViewModels&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> get(DEFAULT_KEY + <span class=\"string\">&quot;:&quot;</span> + canonicalName, modelClass);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@SuppressWarnings(&quot;unchecked&quot;)</span></span><br><span class=\"line\">    <span class=\"meta\">@NonNull</span></span><br><span class=\"line\">    <span class=\"meta\">@MainThread</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> &lt;T extends ViewModel&gt; <span class=\"function\">T <span class=\"title\">get</span><span class=\"params\">(<span class=\"meta\">@NonNull</span> String key, <span class=\"meta\">@NonNull</span> Class&lt;T&gt; modelClass)</span> </span>&#123;</span><br><span class=\"line\">        ViewModel viewModel = mViewModelStore.get(key);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (modelClass.isInstance(viewModel)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (mFactory <span class=\"keyword\">instanceof</span> OnRequeryFactory) &#123;</span><br><span class=\"line\">                ((OnRequeryFactory) mFactory).onRequery(viewModel);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> (T) viewModel;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">//noinspection StatementWithEmptyBody</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (viewModel != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"comment\">// <span class=\"doctag\">TODO:</span> log a warning.</span></span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (mFactory <span class=\"keyword\">instanceof</span> KeyedFactory) &#123;</span><br><span class=\"line\">            viewModel = ((KeyedFactory) mFactory).create(key, modelClass);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            viewModel = mFactory.create(modelClass);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        mViewModelStore.put(key, viewModel);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> (T) viewModel;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<p>ViewModel和ViewModelStore的源码都很简单</p>\n<p>ViewModelStore内部就是HashMap存储ViewModel</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">ViewModelStore</span> </span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> HashMap&lt;String, ViewModel&gt; mMap = <span class=\"keyword\">new</span> HashMap&lt;&gt;();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">final</span> <span class=\"keyword\">void</span> <span class=\"title\">put</span><span class=\"params\">(String key, ViewModel viewModel)</span> </span>&#123;</span><br><span class=\"line\">        ViewModel oldViewModel = mMap.put(key, viewModel);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (oldViewModel != <span class=\"keyword\">null</span>) &#123;</span><br><span class=\"line\">            oldViewModel.onCleared();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">final</span> ViewModel <span class=\"title\">get</span><span class=\"params\">(String key)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> mMap.get(key);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"function\">Set&lt;String&gt; <span class=\"title\">keys</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> HashSet&lt;&gt;(mMap.keySet());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     *  Clears internal storage and notifies ViewModels that they are no longer used.</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">void</span> <span class=\"title\">clear</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (ViewModel vm : mMap.values()) &#123;</span><br><span class=\"line\">            vm.clear();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        mMap.clear();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Android view的绘制流程","date":"2021-10-04T05:21:09.000Z","_content":"\n> view的绘制流程分三步：测量measure 布局layout 绘制draw\n>\n> 测量是得到view的大小\n>\n> 布局是将view放置合适的位置\n>\n> 绘制是把view展现出来\n\n具体源码整理如下[流程图](https://www.processon.com/view/link/61600cfbf346fb0e99a6d639)\n\n![源码流程图](源码流程图.png)\n\n\n\n**总结：**\n\nview的绘制流程，是从DecorView开始的（加载DecorView的过程，涉及到activity的加载流程），经过measure函数，计算子view、父view的大小，然后执行layout函数，再执行draw。了解view绘制流程，可以从中得知，自定义view的步骤\n\n\n\nhttps://www.jianshu.com/p/5a71014e7b1b\n\nhttps://blog.csdn.net/sinat_27154507/article/details/79748010\n\nhttps://www.cnblogs.com/andy-songwei/p/10955062.html\n\nhttps://blog.csdn.net/Innost/article/details/6172893\n\nhttps://blog.csdn.net/a553181867/article/details/51477040\n","source":"_posts/androidview的绘制流程.md","raw":"---\ntitle: Android view的绘制流程\ndate: 2021-10-04 13:21:09\ntags: Android\ncategories: Android\n \n---\n\n> view的绘制流程分三步：测量measure 布局layout 绘制draw\n>\n> 测量是得到view的大小\n>\n> 布局是将view放置合适的位置\n>\n> 绘制是把view展现出来\n\n具体源码整理如下[流程图](https://www.processon.com/view/link/61600cfbf346fb0e99a6d639)\n\n![源码流程图](源码流程图.png)\n\n\n\n**总结：**\n\nview的绘制流程，是从DecorView开始的（加载DecorView的过程，涉及到activity的加载流程），经过measure函数，计算子view、父view的大小，然后执行layout函数，再执行draw。了解view绘制流程，可以从中得知，自定义view的步骤\n\n\n\nhttps://www.jianshu.com/p/5a71014e7b1b\n\nhttps://blog.csdn.net/sinat_27154507/article/details/79748010\n\nhttps://www.cnblogs.com/andy-songwei/p/10955062.html\n\nhttps://blog.csdn.net/Innost/article/details/6172893\n\nhttps://blog.csdn.net/a553181867/article/details/51477040\n","slug":"androidview的绘制流程","published":1,"updated":"2021-10-08T09:20:46.190Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckv68b4ox000lqggsgea745x8","content":"<blockquote>\n<p>view的绘制流程分三步：测量measure 布局layout 绘制draw</p>\n<p>测量是得到view的大小</p>\n<p>布局是将view放置合适的位置</p>\n<p>绘制是把view展现出来</p>\n</blockquote>\n<p>具体源码整理如下<a href=\"https://www.processon.com/view/link/61600cfbf346fb0e99a6d639\">流程图</a></p>\n<p><img src=\"/2021/10/04/androidview%E7%9A%84%E7%BB%98%E5%88%B6%E6%B5%81%E7%A8%8B/%E6%BA%90%E7%A0%81%E6%B5%81%E7%A8%8B%E5%9B%BE.png\" alt=\"源码流程图\"></p>\n<p><strong>总结：</strong></p>\n<p>view的绘制流程，是从DecorView开始的（加载DecorView的过程，涉及到activity的加载流程），经过measure函数，计算子view、父view的大小，然后执行layout函数，再执行draw。了解view绘制流程，可以从中得知，自定义view的步骤</p>\n<p><a href=\"https://www.jianshu.com/p/5a71014e7b1b\">https://www.jianshu.com/p/5a71014e7b1b</a></p>\n<p><a href=\"https://blog.csdn.net/sinat_27154507/article/details/79748010\">https://blog.csdn.net/sinat_27154507/article/details/79748010</a></p>\n<p><a href=\"https://www.cnblogs.com/andy-songwei/p/10955062.html\">https://www.cnblogs.com/andy-songwei/p/10955062.html</a></p>\n<p><a href=\"https://blog.csdn.net/Innost/article/details/6172893\">https://blog.csdn.net/Innost/article/details/6172893</a></p>\n<p><a href=\"https://blog.csdn.net/a553181867/article/details/51477040\">https://blog.csdn.net/a553181867/article/details/51477040</a></p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>view的绘制流程分三步：测量measure 布局layout 绘制draw</p>\n<p>测量是得到view的大小</p>\n<p>布局是将view放置合适的位置</p>\n<p>绘制是把view展现出来</p>\n</blockquote>\n<p>具体源码整理如下<a href=\"https://www.processon.com/view/link/61600cfbf346fb0e99a6d639\">流程图</a></p>\n<p><img src=\"/2021/10/04/androidview%E7%9A%84%E7%BB%98%E5%88%B6%E6%B5%81%E7%A8%8B/%E6%BA%90%E7%A0%81%E6%B5%81%E7%A8%8B%E5%9B%BE.png\" alt=\"源码流程图\"></p>\n<p><strong>总结：</strong></p>\n<p>view的绘制流程，是从DecorView开始的（加载DecorView的过程，涉及到activity的加载流程），经过measure函数，计算子view、父view的大小，然后执行layout函数，再执行draw。了解view绘制流程，可以从中得知，自定义view的步骤</p>\n<p><a href=\"https://www.jianshu.com/p/5a71014e7b1b\">https://www.jianshu.com/p/5a71014e7b1b</a></p>\n<p><a href=\"https://blog.csdn.net/sinat_27154507/article/details/79748010\">https://blog.csdn.net/sinat_27154507/article/details/79748010</a></p>\n<p><a href=\"https://www.cnblogs.com/andy-songwei/p/10955062.html\">https://www.cnblogs.com/andy-songwei/p/10955062.html</a></p>\n<p><a href=\"https://blog.csdn.net/Innost/article/details/6172893\">https://blog.csdn.net/Innost/article/details/6172893</a></p>\n<p><a href=\"https://blog.csdn.net/a553181867/article/details/51477040\">https://blog.csdn.net/a553181867/article/details/51477040</a></p>\n"},{"title":"android调用System.gc()有用么？","date":"2021-09-27T02:43:43.000Z","_content":"\n#### **结论**\n\n在Android中，仅调用System.gc(）并不起作用；\n\n若有需求，可采用方法：\n\n1. 直接调用`Runtime.getRuntime().gc()`\n2. 调用`System.runFinalization()`和`System.gc()`\n\n> 即使没有显式调用gc方法，虚拟机也会根据需要在单独的线程中自动执行此回收过程\n\n\n\n#### **源码分析**\n\n```java\n/**\n *\tSystem.gc(）源码\n *\t由此可见，真正起作用的是Runtime.getRuntime().gc()，\n *\t且仅当shouldRunGC=true时，才会执行；\n *\t而shouldRunGC的赋值取决于justRanFinaljuization\n */\npublic static void gc() {\n        boolean shouldRunGC;\n        synchronized (LOCK) {\n            shouldRunGC = justRanFinaljuization;\n            if (shouldRunGC) {\n                justRanFinalization = false;\n            } else {\n                runGC = true;\n            }\n        }\n        if (shouldRunGC) {\n            Runtime.getRuntime().gc();\n        }\n    }\n```\n\n```java\n/**\n *\tjustRanFinaljuization仅在runFinalization（）方法中赋值为true;\n *\t且runGC也仅在gc()方法中赋值为true\n * \t因此代码中仅调用System.gc()无用\n */\npublic static void runFinalization() {\n        boolean shouldRunGC;\n        synchronized (LOCK) {\n            shouldRunGC = runGC;\n            runGC = false;\n        }\n        if (shouldRunGC) {\n            Runtime.getRuntime().gc();\n        }\n        Runtime.getRuntime().runFinalization();\n        synchronized (LOCK) {\n            justRanFinalization = true;\n        }\n    }\n```\n","source":"_posts/android中的System-gc.md","raw":"---\ntitle: android调用System.gc()有用么？\ndate: 2021-09-27 10:43:43\ntags: Android\ncategories: Android\n\n---\n\n#### **结论**\n\n在Android中，仅调用System.gc(）并不起作用；\n\n若有需求，可采用方法：\n\n1. 直接调用`Runtime.getRuntime().gc()`\n2. 调用`System.runFinalization()`和`System.gc()`\n\n> 即使没有显式调用gc方法，虚拟机也会根据需要在单独的线程中自动执行此回收过程\n\n\n\n#### **源码分析**\n\n```java\n/**\n *\tSystem.gc(）源码\n *\t由此可见，真正起作用的是Runtime.getRuntime().gc()，\n *\t且仅当shouldRunGC=true时，才会执行；\n *\t而shouldRunGC的赋值取决于justRanFinaljuization\n */\npublic static void gc() {\n        boolean shouldRunGC;\n        synchronized (LOCK) {\n            shouldRunGC = justRanFinaljuization;\n            if (shouldRunGC) {\n                justRanFinalization = false;\n            } else {\n                runGC = true;\n            }\n        }\n        if (shouldRunGC) {\n            Runtime.getRuntime().gc();\n        }\n    }\n```\n\n```java\n/**\n *\tjustRanFinaljuization仅在runFinalization（）方法中赋值为true;\n *\t且runGC也仅在gc()方法中赋值为true\n * \t因此代码中仅调用System.gc()无用\n */\npublic static void runFinalization() {\n        boolean shouldRunGC;\n        synchronized (LOCK) {\n            shouldRunGC = runGC;\n            runGC = false;\n        }\n        if (shouldRunGC) {\n            Runtime.getRuntime().gc();\n        }\n        Runtime.getRuntime().runFinalization();\n        synchronized (LOCK) {\n            justRanFinalization = true;\n        }\n    }\n```\n","slug":"android中的System-gc","published":1,"updated":"2021-10-08T08:41:46.411Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckv68b4p0000qqggs6y9zbp0t","content":"<h4 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a><strong>结论</strong></h4><p>在Android中，仅调用System.gc(）并不起作用；</p>\n<p>若有需求，可采用方法：</p>\n<ol>\n<li>直接调用<code>Runtime.getRuntime().gc()</code></li>\n<li>调用<code>System.runFinalization()</code>和<code>System.gc()</code></li>\n</ol>\n<blockquote>\n<p>即使没有显式调用gc方法，虚拟机也会根据需要在单独的线程中自动执行此回收过程</p>\n</blockquote>\n<h4 id=\"源码分析\"><a href=\"#源码分析\" class=\"headerlink\" title=\"源码分析\"></a><strong>源码分析</strong></h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> *\tSystem.gc(）源码</span></span><br><span class=\"line\"><span class=\"comment\"> *\t由此可见，真正起作用的是Runtime.getRuntime().gc()，</span></span><br><span class=\"line\"><span class=\"comment\"> *\t且仅当shouldRunGC=true时，才会执行；</span></span><br><span class=\"line\"><span class=\"comment\"> *\t而shouldRunGC的赋值取决于justRanFinaljuization</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">gc</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> shouldRunGC;</span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (LOCK) &#123;</span><br><span class=\"line\">            shouldRunGC = justRanFinaljuization;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (shouldRunGC) &#123;</span><br><span class=\"line\">                justRanFinalization = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                runGC = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (shouldRunGC) &#123;</span><br><span class=\"line\">            Runtime.getRuntime().gc();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> *\tjustRanFinaljuization仅在runFinalization（）方法中赋值为true;</span></span><br><span class=\"line\"><span class=\"comment\"> *\t且runGC也仅在gc()方法中赋值为true</span></span><br><span class=\"line\"><span class=\"comment\"> * \t因此代码中仅调用System.gc()无用</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">runFinalization</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> shouldRunGC;</span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (LOCK) &#123;</span><br><span class=\"line\">            shouldRunGC = runGC;</span><br><span class=\"line\">            runGC = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (shouldRunGC) &#123;</span><br><span class=\"line\">            Runtime.getRuntime().gc();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Runtime.getRuntime().runFinalization();</span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (LOCK) &#123;</span><br><span class=\"line\">            justRanFinalization = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"结论\"><a href=\"#结论\" class=\"headerlink\" title=\"结论\"></a><strong>结论</strong></h4><p>在Android中，仅调用System.gc(）并不起作用；</p>\n<p>若有需求，可采用方法：</p>\n<ol>\n<li>直接调用<code>Runtime.getRuntime().gc()</code></li>\n<li>调用<code>System.runFinalization()</code>和<code>System.gc()</code></li>\n</ol>\n<blockquote>\n<p>即使没有显式调用gc方法，虚拟机也会根据需要在单独的线程中自动执行此回收过程</p>\n</blockquote>\n<h4 id=\"源码分析\"><a href=\"#源码分析\" class=\"headerlink\" title=\"源码分析\"></a><strong>源码分析</strong></h4><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> *\tSystem.gc(）源码</span></span><br><span class=\"line\"><span class=\"comment\"> *\t由此可见，真正起作用的是Runtime.getRuntime().gc()，</span></span><br><span class=\"line\"><span class=\"comment\"> *\t且仅当shouldRunGC=true时，才会执行；</span></span><br><span class=\"line\"><span class=\"comment\"> *\t而shouldRunGC的赋值取决于justRanFinaljuization</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">gc</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> shouldRunGC;</span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (LOCK) &#123;</span><br><span class=\"line\">            shouldRunGC = justRanFinaljuization;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (shouldRunGC) &#123;</span><br><span class=\"line\">                justRanFinalization = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                runGC = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (shouldRunGC) &#123;</span><br><span class=\"line\">            Runtime.getRuntime().gc();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> *\tjustRanFinaljuization仅在runFinalization（）方法中赋值为true;</span></span><br><span class=\"line\"><span class=\"comment\"> *\t且runGC也仅在gc()方法中赋值为true</span></span><br><span class=\"line\"><span class=\"comment\"> * \t因此代码中仅调用System.gc()无用</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">runFinalization</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">boolean</span> shouldRunGC;</span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (LOCK) &#123;</span><br><span class=\"line\">            shouldRunGC = runGC;</span><br><span class=\"line\">            runGC = <span class=\"keyword\">false</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (shouldRunGC) &#123;</span><br><span class=\"line\">            Runtime.getRuntime().gc();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        Runtime.getRuntime().runFinalization();</span><br><span class=\"line\">        <span class=\"keyword\">synchronized</span> (LOCK) &#123;</span><br><span class=\"line\">            justRanFinalization = <span class=\"keyword\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n"},{"title":"git@github.com: Permission denied (publickey).","date":"2021-09-25T04:00:56.000Z","_content":"\n#### **问题描述**\n\n想通过命令删除远程分支 `git push origin --delete hexo` 时，出现\n\n```java\ncurry@MacBook-Pro blog % git push origin --delete hexo       \ngit@github.com: Permission denied (publickey).\nfatal: Could not read from remote repository.\n\nPlease make sure you have the correct access rights\nand the repository exists.\n```\n\n#### **解决方法**\n\n1. `git config --global --list` 通过此命令查看全局邮箱是否与github注册的一致；\n\n   > 我这里不一致，因此需要执行第二部；若一直可以跳过\n\n2. `git config --global user.email \"邮箱\"` 通过此命令配置全局邮箱；\n\n   > 若用户名也想更改，执行`git config --global user.name \"xxx\"`\n\n3. `ssh-keygen -t rsa -C \"邮箱\"` 通过此命令生成ssh；\n\n   > 输入命令，一直回车即可；命令中会提示生成的文件路径；\n   >\n   > 例：Your public key has been saved in /Users/curry/.ssh/id_rsa.pub\n\n4. 将第三步骤中生成的id_rsa.pub文件其内容全部粘贴到github - Settings - SSH and GPG keys - New SSH Key中\n\n   ![image-20210925123231078](image-20210925123231078.png)\n\n5. 执行过以上步骤后，通常可以解决问题！\n\n6. 可以通过 `ssh -T git@github.com `  验证是否成功；若不成功，则执行（未出现，待验证）\n\n   ```\n   ssh-agent -s\n   ssh-add ~/.ssh/id_rsa\n   ```\n","source":"_posts/git-github-com-Permission-denied-publickey.md","raw":"---\ntitle: 'git@github.com: Permission denied (publickey).'\ndate: 2021-09-25 12:00:56\ntags: git\ncategories: git\n---\n\n#### **问题描述**\n\n想通过命令删除远程分支 `git push origin --delete hexo` 时，出现\n\n```java\ncurry@MacBook-Pro blog % git push origin --delete hexo       \ngit@github.com: Permission denied (publickey).\nfatal: Could not read from remote repository.\n\nPlease make sure you have the correct access rights\nand the repository exists.\n```\n\n#### **解决方法**\n\n1. `git config --global --list` 通过此命令查看全局邮箱是否与github注册的一致；\n\n   > 我这里不一致，因此需要执行第二部；若一直可以跳过\n\n2. `git config --global user.email \"邮箱\"` 通过此命令配置全局邮箱；\n\n   > 若用户名也想更改，执行`git config --global user.name \"xxx\"`\n\n3. `ssh-keygen -t rsa -C \"邮箱\"` 通过此命令生成ssh；\n\n   > 输入命令，一直回车即可；命令中会提示生成的文件路径；\n   >\n   > 例：Your public key has been saved in /Users/curry/.ssh/id_rsa.pub\n\n4. 将第三步骤中生成的id_rsa.pub文件其内容全部粘贴到github - Settings - SSH and GPG keys - New SSH Key中\n\n   ![image-20210925123231078](image-20210925123231078.png)\n\n5. 执行过以上步骤后，通常可以解决问题！\n\n6. 可以通过 `ssh -T git@github.com `  验证是否成功；若不成功，则执行（未出现，待验证）\n\n   ```\n   ssh-agent -s\n   ssh-add ~/.ssh/id_rsa\n   ```\n","slug":"git-github-com-Permission-denied-publickey","published":1,"updated":"2021-10-08T08:41:46.422Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckv68b4p1000tqggs34z1e15d","content":"<h4 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a><strong>问题描述</strong></h4><p>想通过命令删除远程分支 <code>git push origin --delete hexo</code> 时，出现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curry<span class=\"meta\">@MacBook</span>-Pro blog % git push origin --delete hexo       </span><br><span class=\"line\">git<span class=\"meta\">@github</span>.com: <span class=\"function\">Permission <span class=\"title\">denied</span> <span class=\"params\">(publickey)</span>.</span></span><br><span class=\"line\"><span class=\"function\">fatal: Could not read from remote repository.</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">Please make sure you have the correct access rights</span></span><br><span class=\"line\"><span class=\"function\">and the repository exists.</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a><strong>解决方法</strong></h4><ol>\n<li><p><code>git config --global --list</code> 通过此命令查看全局邮箱是否与github注册的一致；</p>\n<blockquote>\n<p>我这里不一致，因此需要执行第二部；若一直可以跳过</p>\n</blockquote>\n</li>\n<li><p><code>git config --global user.email &quot;邮箱&quot;</code> 通过此命令配置全局邮箱；</p>\n<blockquote>\n<p>若用户名也想更改，执行<code>git config --global user.name &quot;xxx&quot;</code></p>\n</blockquote>\n</li>\n<li><p><code>ssh-keygen -t rsa -C &quot;邮箱&quot;</code> 通过此命令生成ssh；</p>\n<blockquote>\n<p>输入命令，一直回车即可；命令中会提示生成的文件路径；</p>\n<p>例：Your public key has been saved in /Users/curry/.ssh/id_rsa.pub</p>\n</blockquote>\n</li>\n<li><p>将第三步骤中生成的id_rsa.pub文件其内容全部粘贴到github - Settings - SSH and GPG keys - New SSH Key中</p>\n<p><img src=\"/2021/09/25/git-github-com-Permission-denied-publickey/image-20210925123231078.png\" alt=\"image-20210925123231078\"></p>\n</li>\n<li><p>执行过以上步骤后，通常可以解决问题！</p>\n</li>\n<li><p>可以通过 <code>ssh -T git@github.com </code>  验证是否成功；若不成功，则执行（未出现，待验证）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-agent -s</span><br><span class=\"line\">ssh-add ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure></li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"问题描述\"><a href=\"#问题描述\" class=\"headerlink\" title=\"问题描述\"></a><strong>问题描述</strong></h4><p>想通过命令删除远程分支 <code>git push origin --delete hexo</code> 时，出现</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">curry<span class=\"meta\">@MacBook</span>-Pro blog % git push origin --delete hexo       </span><br><span class=\"line\">git<span class=\"meta\">@github</span>.com: <span class=\"function\">Permission <span class=\"title\">denied</span> <span class=\"params\">(publickey)</span>.</span></span><br><span class=\"line\"><span class=\"function\">fatal: Could not read from remote repository.</span></span><br><span class=\"line\"><span class=\"function\"></span></span><br><span class=\"line\"><span class=\"function\">Please make sure you have the correct access rights</span></span><br><span class=\"line\"><span class=\"function\">and the repository exists.</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a><strong>解决方法</strong></h4><ol>\n<li><p><code>git config --global --list</code> 通过此命令查看全局邮箱是否与github注册的一致；</p>\n<blockquote>\n<p>我这里不一致，因此需要执行第二部；若一直可以跳过</p>\n</blockquote>\n</li>\n<li><p><code>git config --global user.email &quot;邮箱&quot;</code> 通过此命令配置全局邮箱；</p>\n<blockquote>\n<p>若用户名也想更改，执行<code>git config --global user.name &quot;xxx&quot;</code></p>\n</blockquote>\n</li>\n<li><p><code>ssh-keygen -t rsa -C &quot;邮箱&quot;</code> 通过此命令生成ssh；</p>\n<blockquote>\n<p>输入命令，一直回车即可；命令中会提示生成的文件路径；</p>\n<p>例：Your public key has been saved in /Users/curry/.ssh/id_rsa.pub</p>\n</blockquote>\n</li>\n<li><p>将第三步骤中生成的id_rsa.pub文件其内容全部粘贴到github - Settings - SSH and GPG keys - New SSH Key中</p>\n<p><img src=\"/2021/09/25/git-github-com-Permission-denied-publickey/image-20210925123231078.png\" alt=\"image-20210925123231078\"></p>\n</li>\n<li><p>执行过以上步骤后，通常可以解决问题！</p>\n</li>\n<li><p>可以通过 <code>ssh -T git@github.com </code>  验证是否成功；若不成功，则执行（未出现，待验证）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-agent -s</span><br><span class=\"line\">ssh-add ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure></li>\n</ol>\n"},{"title":"hexo YAMLException","date":"2021-09-24T07:00:22.000Z","_content":"\n保存准备发布文章时，提示如下报错：\n\n```\nERROR {\n  err: YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key at line 5, column 1:\n...\n}\n```\n\n问题原因：**缺少空格**！\n\n```kotlin\n//错误示例（categories:hexo）\ntitle: hexo YAMLException\ndate: 2021-09-24 15:00:22\ntags: hexo\ncategories:hexo\n```\n\n```kotlin\n//正确示例（categories: hexo）\ntitle: hexo YAMLException\ndate: 2021-09-24 15:00:22\ntags: hexo\ncategories: hexo\n```\n\n\n\n[官方说明](https://hexo.io/zh-cn/docs/troubleshooting.html#YAML-%E8%A7%A3%E6%9E%90%E9%94%99%E8%AF%AF)\n\n![image-20210924151457951](image-20210924151457951.png)\n\n","source":"_posts/hexo-YAMLException.md","raw":"---\ntitle: hexo YAMLException\ndate: 2021-09-24 15:00:22\ntags: hexo\ncategories: hexo\n\n---\n\n保存准备发布文章时，提示如下报错：\n\n```\nERROR {\n  err: YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key at line 5, column 1:\n...\n}\n```\n\n问题原因：**缺少空格**！\n\n```kotlin\n//错误示例（categories:hexo）\ntitle: hexo YAMLException\ndate: 2021-09-24 15:00:22\ntags: hexo\ncategories:hexo\n```\n\n```kotlin\n//正确示例（categories: hexo）\ntitle: hexo YAMLException\ndate: 2021-09-24 15:00:22\ntags: hexo\ncategories: hexo\n```\n\n\n\n[官方说明](https://hexo.io/zh-cn/docs/troubleshooting.html#YAML-%E8%A7%A3%E6%9E%90%E9%94%99%E8%AF%AF)\n\n![image-20210924151457951](image-20210924151457951.png)\n\n","slug":"hexo-YAMLException","published":1,"updated":"2021-10-08T08:41:46.424Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckv68b4p3000yqggs326e3y0c","content":"<p>保存准备发布文章时，提示如下报错：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR &#123;</span><br><span class=\"line\">  err: YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key at line 5, column 1:</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>问题原因：<strong>缺少空格</strong>！</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//错误示例（categories:hexo）</span></span><br><span class=\"line\">title: hexo YAMLException</span><br><span class=\"line\">date: <span class=\"number\">2021</span>-09-<span class=\"number\">24</span> <span class=\"number\">15</span>:<span class=\"number\">00</span>:<span class=\"number\">22</span></span><br><span class=\"line\">tags: hexo</span><br><span class=\"line\">categories:hexo</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确示例（categories: hexo）</span></span><br><span class=\"line\">title: hexo YAMLException</span><br><span class=\"line\">date: <span class=\"number\">2021</span>-09-<span class=\"number\">24</span> <span class=\"number\">15</span>:<span class=\"number\">00</span>:<span class=\"number\">22</span></span><br><span class=\"line\">tags: hexo</span><br><span class=\"line\">categories: hexo</span><br></pre></td></tr></table></figure>\n\n\n\n<p><a href=\"https://hexo.io/zh-cn/docs/troubleshooting.html#YAML-%E8%A7%A3%E6%9E%90%E9%94%99%E8%AF%AF\">官方说明</a></p>\n<p><img src=\"/2021/09/24/hexo-YAMLException/image-20210924151457951.png\" alt=\"image-20210924151457951\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p>保存准备发布文章时，提示如下报错：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ERROR &#123;</span><br><span class=\"line\">  err: YAMLException: can not read a block mapping entry; a multiline key may not be an implicit key at line 5, column 1:</span><br><span class=\"line\">...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>问题原因：<strong>缺少空格</strong>！</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//错误示例（categories:hexo）</span></span><br><span class=\"line\">title: hexo YAMLException</span><br><span class=\"line\">date: <span class=\"number\">2021</span>-09-<span class=\"number\">24</span> <span class=\"number\">15</span>:<span class=\"number\">00</span>:<span class=\"number\">22</span></span><br><span class=\"line\">tags: hexo</span><br><span class=\"line\">categories:hexo</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//正确示例（categories: hexo）</span></span><br><span class=\"line\">title: hexo YAMLException</span><br><span class=\"line\">date: <span class=\"number\">2021</span>-09-<span class=\"number\">24</span> <span class=\"number\">15</span>:<span class=\"number\">00</span>:<span class=\"number\">22</span></span><br><span class=\"line\">tags: hexo</span><br><span class=\"line\">categories: hexo</span><br></pre></td></tr></table></figure>\n\n\n\n<p><a href=\"https://hexo.io/zh-cn/docs/troubleshooting.html#YAML-%E8%A7%A3%E6%9E%90%E9%94%99%E8%AF%AF\">官方说明</a></p>\n<p><img src=\"/2021/09/24/hexo-YAMLException/image-20210924151457951.png\" alt=\"image-20210924151457951\"></p>\n"},{"title":"hexo多电脑部署","date":"2021-09-25T02:33:30.000Z","_content":"\n> 当在办公室或家里都想输出文章，怎么办呢？\n\n在github已有仓库（xxx.github.io）中，新建分支（比如：命名为build分支），把已经创建的本地文件全部上传；\n\n这里可以把build作为默认分支（`新建的文章默认是提交到master分支上的`），这样每次有变更后，就如同提交代码一样，把本地文件提交到build上。\n\n在新的电脑上拉取build分支即可同步已经配置好的相关内容；\n\nclone到本地后，要确认相关环境是否都配置过，然后需要在clone的本地文件中执行 `npm install` 和 `npm install -g hexo` \n\n这样就可以继续输出文章啦~\n","source":"_posts/hexo多电脑部署.md","raw":"---\ntitle: hexo多电脑部署\ndate: 2021-09-25 10:33:30\ntags: hexo\ncategories: hexo\n\n---\n\n> 当在办公室或家里都想输出文章，怎么办呢？\n\n在github已有仓库（xxx.github.io）中，新建分支（比如：命名为build分支），把已经创建的本地文件全部上传；\n\n这里可以把build作为默认分支（`新建的文章默认是提交到master分支上的`），这样每次有变更后，就如同提交代码一样，把本地文件提交到build上。\n\n在新的电脑上拉取build分支即可同步已经配置好的相关内容；\n\nclone到本地后，要确认相关环境是否都配置过，然后需要在clone的本地文件中执行 `npm install` 和 `npm install -g hexo` \n\n这样就可以继续输出文章啦~\n","slug":"hexo多电脑部署","published":1,"updated":"2021-10-08T08:41:46.447Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckv68b4p40011qggs2i1241sn","content":"<blockquote>\n<p>当在办公室或家里都想输出文章，怎么办呢？</p>\n</blockquote>\n<p>在github已有仓库（xxx.github.io）中，新建分支（比如：命名为build分支），把已经创建的本地文件全部上传；</p>\n<p>这里可以把build作为默认分支（<code>新建的文章默认是提交到master分支上的</code>），这样每次有变更后，就如同提交代码一样，把本地文件提交到build上。</p>\n<p>在新的电脑上拉取build分支即可同步已经配置好的相关内容；</p>\n<p>clone到本地后，要确认相关环境是否都配置过，然后需要在clone的本地文件中执行 <code>npm install</code> 和 <code>npm install -g hexo</code> </p>\n<p>这样就可以继续输出文章啦~</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>当在办公室或家里都想输出文章，怎么办呢？</p>\n</blockquote>\n<p>在github已有仓库（xxx.github.io）中，新建分支（比如：命名为build分支），把已经创建的本地文件全部上传；</p>\n<p>这里可以把build作为默认分支（<code>新建的文章默认是提交到master分支上的</code>），这样每次有变更后，就如同提交代码一样，把本地文件提交到build上。</p>\n<p>在新的电脑上拉取build分支即可同步已经配置好的相关内容；</p>\n<p>clone到本地后，要确认相关环境是否都配置过，然后需要在clone的本地文件中执行 <code>npm install</code> 和 <code>npm install -g hexo</code> </p>\n<p>这样就可以继续输出文章啦~</p>\n"},{"title":"hexo增加分类和标签","date":"2021-09-24T06:58:15.000Z","_content":"\n#### **创建“分类”选项**\n\n在hexo目录下，执行：\n\n```\nhexo new page categories\n```\n\nhexo\\source目录下会生成categories文件夹；编辑categories\\index.md，添加\ttype: \"categories\"；添加后保存并关闭文件。\n\n```\n---\ntitle: 分类\ndate: 2021-09-24 14:43:00\ntype: categories\n---\n```\n\n**给文章添加“categories”属性**\n\n打开需要添加分类的文章，为其添加categories属性。\n\n下方的categories:hexo表示这篇文章添加到到“hexo”这个分类。注意：一篇文章只会添加到一个分类中，如果是多个默认放到第一个分类中。\n\n```\n---\ntitle: hexo增加分类和标签\ndate: 2021-09-24 14:43:00\ncategories: hexo\n---\n```\n\n\n\n#### **创建“标签”选项**（与添加分类操作类似）\n\n在hexo目录下，执行：\n\n```\nhexo new page tags\n```\n\nhexo\\source目录下会生成tags文件夹；编辑tags\\index.md，添加\ttype: \"tags\"；添加后保存并关闭文件。\n\n```\n---\ntitle: 标签\ndate: 2021-09-24 14:43:00\ntype: tags\n---\n```\n\n**给文章添加“tags”属性**\n\n打开需要添加标签的文章，为其添加tags属性。\n\n```\n---\ntitle: hexo增加分类和标签\ndate: 2019-04-24 15:40:24\ncategories: hexo\ntags: hexo\n---\n```\n\n**参考：**\n\nhttps://juejin.cn/post/6844903830216261645\n\n","source":"_posts/hexo增加分类和标签.md","raw":"---\ntitle: hexo增加分类和标签\ndate: 2021-09-24 14:58:15\ntags: hexo\ncategories: hexo\n---\n\n#### **创建“分类”选项**\n\n在hexo目录下，执行：\n\n```\nhexo new page categories\n```\n\nhexo\\source目录下会生成categories文件夹；编辑categories\\index.md，添加\ttype: \"categories\"；添加后保存并关闭文件。\n\n```\n---\ntitle: 分类\ndate: 2021-09-24 14:43:00\ntype: categories\n---\n```\n\n**给文章添加“categories”属性**\n\n打开需要添加分类的文章，为其添加categories属性。\n\n下方的categories:hexo表示这篇文章添加到到“hexo”这个分类。注意：一篇文章只会添加到一个分类中，如果是多个默认放到第一个分类中。\n\n```\n---\ntitle: hexo增加分类和标签\ndate: 2021-09-24 14:43:00\ncategories: hexo\n---\n```\n\n\n\n#### **创建“标签”选项**（与添加分类操作类似）\n\n在hexo目录下，执行：\n\n```\nhexo new page tags\n```\n\nhexo\\source目录下会生成tags文件夹；编辑tags\\index.md，添加\ttype: \"tags\"；添加后保存并关闭文件。\n\n```\n---\ntitle: 标签\ndate: 2021-09-24 14:43:00\ntype: tags\n---\n```\n\n**给文章添加“tags”属性**\n\n打开需要添加标签的文章，为其添加tags属性。\n\n```\n---\ntitle: hexo增加分类和标签\ndate: 2019-04-24 15:40:24\ncategories: hexo\ntags: hexo\n---\n```\n\n**参考：**\n\nhttps://juejin.cn/post/6844903830216261645\n\n","slug":"hexo增加分类和标签","published":1,"updated":"2021-10-08T08:41:46.429Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckv68b4p50016qggs3m756cgj","content":"<h4 id=\"创建“分类”选项\"><a href=\"#创建“分类”选项\" class=\"headerlink\" title=\"创建“分类”选项\"></a><strong>创建“分类”选项</strong></h4><p>在hexo目录下，执行：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page categories</span><br></pre></td></tr></table></figure>\n\n<p>hexo\\source目录下会生成categories文件夹；编辑categories\\index.md，添加    type: “categories”；添加后保存并关闭文件。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 分类</span><br><span class=\"line\">date: 2021-09-24 14:43:00</span><br><span class=\"line\">type: categories</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p><strong>给文章添加“categories”属性</strong></p>\n<p>打开需要添加分类的文章，为其添加categories属性。</p>\n<p>下方的categories:hexo表示这篇文章添加到到“hexo”这个分类。注意：一篇文章只会添加到一个分类中，如果是多个默认放到第一个分类中。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: hexo增加分类和标签</span><br><span class=\"line\">date: 2021-09-24 14:43:00</span><br><span class=\"line\">categories: hexo</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"创建“标签”选项（与添加分类操作类似）\"><a href=\"#创建“标签”选项（与添加分类操作类似）\" class=\"headerlink\" title=\"创建“标签”选项（与添加分类操作类似）\"></a><strong>创建“标签”选项</strong>（与添加分类操作类似）</h4><p>在hexo目录下，执行：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page tags</span><br></pre></td></tr></table></figure>\n\n<p>hexo\\source目录下会生成tags文件夹；编辑tags\\index.md，添加    type: “tags”；添加后保存并关闭文件。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 标签</span><br><span class=\"line\">date: 2021-09-24 14:43:00</span><br><span class=\"line\">type: tags</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p><strong>给文章添加“tags”属性</strong></p>\n<p>打开需要添加标签的文章，为其添加tags属性。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: hexo增加分类和标签</span><br><span class=\"line\">date: 2019-04-24 15:40:24</span><br><span class=\"line\">categories: hexo</span><br><span class=\"line\">tags: hexo</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p><strong>参考：</strong></p>\n<p><a href=\"https://juejin.cn/post/6844903830216261645\">https://juejin.cn/post/6844903830216261645</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h4 id=\"创建“分类”选项\"><a href=\"#创建“分类”选项\" class=\"headerlink\" title=\"创建“分类”选项\"></a><strong>创建“分类”选项</strong></h4><p>在hexo目录下，执行：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page categories</span><br></pre></td></tr></table></figure>\n\n<p>hexo\\source目录下会生成categories文件夹；编辑categories\\index.md，添加    type: “categories”；添加后保存并关闭文件。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 分类</span><br><span class=\"line\">date: 2021-09-24 14:43:00</span><br><span class=\"line\">type: categories</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p><strong>给文章添加“categories”属性</strong></p>\n<p>打开需要添加分类的文章，为其添加categories属性。</p>\n<p>下方的categories:hexo表示这篇文章添加到到“hexo”这个分类。注意：一篇文章只会添加到一个分类中，如果是多个默认放到第一个分类中。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: hexo增加分类和标签</span><br><span class=\"line\">date: 2021-09-24 14:43:00</span><br><span class=\"line\">categories: hexo</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n\n\n<h4 id=\"创建“标签”选项（与添加分类操作类似）\"><a href=\"#创建“标签”选项（与添加分类操作类似）\" class=\"headerlink\" title=\"创建“标签”选项（与添加分类操作类似）\"></a><strong>创建“标签”选项</strong>（与添加分类操作类似）</h4><p>在hexo目录下，执行：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new page tags</span><br></pre></td></tr></table></figure>\n\n<p>hexo\\source目录下会生成tags文件夹；编辑tags\\index.md，添加    type: “tags”；添加后保存并关闭文件。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: 标签</span><br><span class=\"line\">date: 2021-09-24 14:43:00</span><br><span class=\"line\">type: tags</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p><strong>给文章添加“tags”属性</strong></p>\n<p>打开需要添加标签的文章，为其添加tags属性。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">---</span><br><span class=\"line\">title: hexo增加分类和标签</span><br><span class=\"line\">date: 2019-04-24 15:40:24</span><br><span class=\"line\">categories: hexo</span><br><span class=\"line\">tags: hexo</span><br><span class=\"line\">---</span><br></pre></td></tr></table></figure>\n\n<p><strong>参考：</strong></p>\n<p><a href=\"https://juejin.cn/post/6844903830216261645\">https://juejin.cn/post/6844903830216261645</a></p>\n"},{"title":"rn入门","date":"2021-10-13T01:43:44.000Z","_content":"### **环境搭建**\n\n```\nFAILURE: Build failed with an exception.\n\n* What went wrong:\nCould not determine the dependencies of task ':app:compileDebugJavaWithJavac'.\n> Failed to install the following Android SDK packages as some licences have not been accepted.\n     patcher;v4 SDK Patch Applier v4\n     emulator Android Emulator\n     platforms;android-30 Android SDK Platform 30\n     build-tools;30.0.2 Android SDK Build-Tools 30.0.2\n     tools Android SDK Tools\n  To build this project, accept the SDK license agreements and install the missing components using the Android Studio SDK Manager.\n  Alternatively, to transfer the license agreements from one workstation to another, see http://d.android.com/r/studio-ui/export-licenses.html\n\n  Using Android SDK: C:\\android_sdk\\platform-tools\n\n* Try:\nRun with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.\n\n* Get more help at https://help.gradle.org\n\nBUILD FAILED in 28s\n\nerror Failed to install the app. Please accept all necessary Android SDK licenses using Android SDK Manager: \"$ANDROID_HOME/tools/bin/sdkmanager --licenses\".\nError: Command failed: gradlew.bat app:installDebug -PreactNativeDevServerPort=8081\n\n```\n\n经检查是环境变量配置有问题，导致找不到对应的路径；\n可以参考[官方文档](https://www.react-native.cn/docs/environment-setup)","source":"_posts/rn入门.md","raw":"title: rn入门\ntags: RN\ncategories: RN\ndate: 2021-10-13 09:43:44\n---\n### **环境搭建**\n\n```\nFAILURE: Build failed with an exception.\n\n* What went wrong:\nCould not determine the dependencies of task ':app:compileDebugJavaWithJavac'.\n> Failed to install the following Android SDK packages as some licences have not been accepted.\n     patcher;v4 SDK Patch Applier v4\n     emulator Android Emulator\n     platforms;android-30 Android SDK Platform 30\n     build-tools;30.0.2 Android SDK Build-Tools 30.0.2\n     tools Android SDK Tools\n  To build this project, accept the SDK license agreements and install the missing components using the Android Studio SDK Manager.\n  Alternatively, to transfer the license agreements from one workstation to another, see http://d.android.com/r/studio-ui/export-licenses.html\n\n  Using Android SDK: C:\\android_sdk\\platform-tools\n\n* Try:\nRun with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.\n\n* Get more help at https://help.gradle.org\n\nBUILD FAILED in 28s\n\nerror Failed to install the app. Please accept all necessary Android SDK licenses using Android SDK Manager: \"$ANDROID_HOME/tools/bin/sdkmanager --licenses\".\nError: Command failed: gradlew.bat app:installDebug -PreactNativeDevServerPort=8081\n\n```\n\n经检查是环境变量配置有问题，导致找不到对应的路径；\n可以参考[官方文档](https://www.react-native.cn/docs/environment-setup)","slug":"rn入门","published":1,"updated":"2021-10-22T01:43:49.622Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckv68b4pa001kqggs9kk2hwa5","content":"<h3 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a><strong>环境搭建</strong></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FAILURE: Build failed with an exception.</span><br><span class=\"line\"></span><br><span class=\"line\">* What went wrong:</span><br><span class=\"line\">Could not determine the dependencies of task &#x27;:app:compileDebugJavaWithJavac&#x27;.</span><br><span class=\"line\">&gt; Failed to install the following Android SDK packages as some licences have not been accepted.</span><br><span class=\"line\">     patcher;v4 SDK Patch Applier v4</span><br><span class=\"line\">     emulator Android Emulator</span><br><span class=\"line\">     platforms;android-30 Android SDK Platform 30</span><br><span class=\"line\">     build-tools;30.0.2 Android SDK Build-Tools 30.0.2</span><br><span class=\"line\">     tools Android SDK Tools</span><br><span class=\"line\">  To build this project, accept the SDK license agreements and install the missing components using the Android Studio SDK Manager.</span><br><span class=\"line\">  Alternatively, to transfer the license agreements from one workstation to another, see http://d.android.com/r/studio-ui/export-licenses.html</span><br><span class=\"line\"></span><br><span class=\"line\">  Using Android SDK: C:\\android_sdk\\platform-tools</span><br><span class=\"line\"></span><br><span class=\"line\">* Try:</span><br><span class=\"line\">Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.</span><br><span class=\"line\"></span><br><span class=\"line\">* Get more help at https://help.gradle.org</span><br><span class=\"line\"></span><br><span class=\"line\">BUILD FAILED in 28s</span><br><span class=\"line\"></span><br><span class=\"line\">error Failed to install the app. Please accept all necessary Android SDK licenses using Android SDK Manager: &quot;$ANDROID_HOME/tools/bin/sdkmanager --licenses&quot;.</span><br><span class=\"line\">Error: Command failed: gradlew.bat app:installDebug -PreactNativeDevServerPort=8081</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>经检查是环境变量配置有问题，导致找不到对应的路径；<br>可以参考<a href=\"https://www.react-native.cn/docs/environment-setup\">官方文档</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"环境搭建\"><a href=\"#环境搭建\" class=\"headerlink\" title=\"环境搭建\"></a><strong>环境搭建</strong></h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">FAILURE: Build failed with an exception.</span><br><span class=\"line\"></span><br><span class=\"line\">* What went wrong:</span><br><span class=\"line\">Could not determine the dependencies of task &#x27;:app:compileDebugJavaWithJavac&#x27;.</span><br><span class=\"line\">&gt; Failed to install the following Android SDK packages as some licences have not been accepted.</span><br><span class=\"line\">     patcher;v4 SDK Patch Applier v4</span><br><span class=\"line\">     emulator Android Emulator</span><br><span class=\"line\">     platforms;android-30 Android SDK Platform 30</span><br><span class=\"line\">     build-tools;30.0.2 Android SDK Build-Tools 30.0.2</span><br><span class=\"line\">     tools Android SDK Tools</span><br><span class=\"line\">  To build this project, accept the SDK license agreements and install the missing components using the Android Studio SDK Manager.</span><br><span class=\"line\">  Alternatively, to transfer the license agreements from one workstation to another, see http://d.android.com/r/studio-ui/export-licenses.html</span><br><span class=\"line\"></span><br><span class=\"line\">  Using Android SDK: C:\\android_sdk\\platform-tools</span><br><span class=\"line\"></span><br><span class=\"line\">* Try:</span><br><span class=\"line\">Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.</span><br><span class=\"line\"></span><br><span class=\"line\">* Get more help at https://help.gradle.org</span><br><span class=\"line\"></span><br><span class=\"line\">BUILD FAILED in 28s</span><br><span class=\"line\"></span><br><span class=\"line\">error Failed to install the app. Please accept all necessary Android SDK licenses using Android SDK Manager: &quot;$ANDROID_HOME/tools/bin/sdkmanager --licenses&quot;.</span><br><span class=\"line\">Error: Command failed: gradlew.bat app:installDebug -PreactNativeDevServerPort=8081</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>经检查是环境变量配置有问题，导致找不到对应的路径；<br>可以参考<a href=\"https://www.react-native.cn/docs/environment-setup\">官方文档</a></p>\n"},{"title":"记录","date":"2021-09-26T08:58:08.000Z","_content":"\n- 对Activity的启动流程了解吗？\n- AMS在Android起到什么作用，简单分析下Android的源码\n- system_server为什么要在Zygote中启动，而不是由init直接启动呢?\n- 为什么要专门使用Zygote进程去孵化应用进程，而不是让system_server去孵化呢?\n- 能说说具体是怎么导致死锁的吗?\n- Zygote为什么不采用Binder机制进行IPC通信?\n\nhttps://github.com/BlackZhangJX/Android-Notes\n\n","source":"_posts/记录.md","raw":"---\ntitle: 记录\ndate: 2021-09-26 16:58:08\ntags: 草稿\ncategories: 随记\n---\n\n- 对Activity的启动流程了解吗？\n- AMS在Android起到什么作用，简单分析下Android的源码\n- system_server为什么要在Zygote中启动，而不是由init直接启动呢?\n- 为什么要专门使用Zygote进程去孵化应用进程，而不是让system_server去孵化呢?\n- 能说说具体是怎么导致死锁的吗?\n- Zygote为什么不采用Binder机制进行IPC通信?\n\nhttps://github.com/BlackZhangJX/Android-Notes\n\n","slug":"记录","published":1,"updated":"2021-10-08T08:41:46.459Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckv68b4pi001pqggscj1fev5j","content":"<ul>\n<li>对Activity的启动流程了解吗？</li>\n<li>AMS在Android起到什么作用，简单分析下Android的源码</li>\n<li>system_server为什么要在Zygote中启动，而不是由init直接启动呢?</li>\n<li>为什么要专门使用Zygote进程去孵化应用进程，而不是让system_server去孵化呢?</li>\n<li>能说说具体是怎么导致死锁的吗?</li>\n<li>Zygote为什么不采用Binder机制进行IPC通信?</li>\n</ul>\n<p><a href=\"https://github.com/BlackZhangJX/Android-Notes\">https://github.com/BlackZhangJX/Android-Notes</a></p>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>对Activity的启动流程了解吗？</li>\n<li>AMS在Android起到什么作用，简单分析下Android的源码</li>\n<li>system_server为什么要在Zygote中启动，而不是由init直接启动呢?</li>\n<li>为什么要专门使用Zygote进程去孵化应用进程，而不是让system_server去孵化呢?</li>\n<li>能说说具体是怎么导致死锁的吗?</li>\n<li>Zygote为什么不采用Binder机制进行IPC通信?</li>\n</ul>\n<p><a href=\"https://github.com/BlackZhangJX/Android-Notes\">https://github.com/BlackZhangJX/Android-Notes</a></p>\n"}],"PostAsset":[{"_id":"source/_posts/EACCES-permission-denied-access-usr-local-lib-node-modules/image-20210925105028907.png","post":"ckv68b4oq0007qggs30jrdov5","slug":"image-20210925105028907.png","modified":1,"renderable":1},{"_id":"source/_posts/Github-Hexo搭建笔记/image-20210918165516634.png","post":"ckv68b4oq0008qggs3wgudxti","slug":"image-20210918165516634.png","modified":1,"renderable":1},{"_id":"source/_posts/Github-Hexo搭建笔记/image-20210923104949941.png","post":"ckv68b4oq0008qggs3wgudxti","slug":"image-20210923104949941.png","modified":1,"renderable":1},{"_id":"source/_posts/Github-Hexo搭建笔记/image-20210923105008730.png","post":"ckv68b4oq0008qggs3wgudxti","slug":"image-20210923105008730.png","modified":1,"renderable":1},{"_id":"source/_posts/TypeError-line-matchAll-is-not-a-function/image-20210925111618240.png","post":"ckv68b4ot000eqggs37c8dxpf","slug":"image-20210925111618240.png","modified":1,"renderable":1},{"_id":"source/_posts/androidview的绘制流程/源码流程图.png","post":"ckv68b4ox000lqggsgea745x8","slug":"源码流程图.png","modified":1,"renderable":1},{"_id":"source/_posts/git-github-com-Permission-denied-publickey/image-20210925123231078.png","post":"ckv68b4p1000tqggs34z1e15d","slug":"image-20210925123231078.png","modified":1,"renderable":1},{"_id":"source/_posts/hexo-YAMLException/image-20210924150934346.png","post":"ckv68b4p3000yqggs326e3y0c","slug":"image-20210924150934346.png","modified":1,"renderable":1},{"_id":"source/_posts/hexo-YAMLException/image-20210924150941054.png","post":"ckv68b4p3000yqggs326e3y0c","slug":"image-20210924150941054.png","modified":1,"renderable":1},{"_id":"source/_posts/hexo-YAMLException/image-20210924151455552.png","post":"ckv68b4p3000yqggs326e3y0c","slug":"image-20210924151455552.png","modified":1,"renderable":1},{"_id":"source/_posts/hexo-YAMLException/image-20210924151457951.png","post":"ckv68b4p3000yqggs326e3y0c","slug":"image-20210924151457951.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"ckv68b4ok0002qggs1iel0092","category_id":"ckv68b4oo0005qggsh1ythmtk","_id":"ckv68b4ou000fqggseyp47uq7"},{"post_id":"ckv68b4ot000dqggs6gcz18nf","category_id":"ckv68b4oo0005qggsh1ythmtk","_id":"ckv68b4oz000mqggs9uk0fsgq"},{"post_id":"ckv68b4on0004qggs91ce8yna","category_id":"ckv68b4os000aqggsd8hdgi6h","_id":"ckv68b4p0000rqggscwe72fj6"},{"post_id":"ckv68b4ow000jqggsfwnpbdqx","category_id":"ckv68b4oo0005qggsh1ythmtk","_id":"ckv68b4p1000uqggshm84da05"},{"post_id":"ckv68b4oq0007qggs30jrdov5","category_id":"ckv68b4os000aqggsd8hdgi6h","_id":"ckv68b4p3000zqggs76ly5s9d"},{"post_id":"ckv68b4ox000lqggsgea745x8","category_id":"ckv68b4oo0005qggsh1ythmtk","_id":"ckv68b4p50012qggs682f0gm2"},{"post_id":"ckv68b4p0000qqggs6y9zbp0t","category_id":"ckv68b4oo0005qggsh1ythmtk","_id":"ckv68b4p60017qggsbj8qciiz"},{"post_id":"ckv68b4oq0008qggs3wgudxti","category_id":"ckv68b4os000aqggsd8hdgi6h","_id":"ckv68b4p60019qggsfk76cvfq"},{"post_id":"ckv68b4p3000yqggs326e3y0c","category_id":"ckv68b4os000aqggsd8hdgi6h","_id":"ckv68b4p7001bqggs901q7uid"},{"post_id":"ckv68b4or0009qggshijl7ie2","category_id":"ckv68b4p2000vqggsbix38vr0","_id":"ckv68b4p7001dqggs1sl4dtfx"},{"post_id":"ckv68b4p40011qggs2i1241sn","category_id":"ckv68b4os000aqggsd8hdgi6h","_id":"ckv68b4p7001fqggscq9v0w02"},{"post_id":"ckv68b4p50016qggs3m756cgj","category_id":"ckv68b4os000aqggsd8hdgi6h","_id":"ckv68b4p7001hqggsharo3jdw"},{"post_id":"ckv68b4p1000tqggs34z1e15d","category_id":"ckv68b4p50013qggs7jc8f9t7","_id":"ckv68b4p7001jqggsd855f61l"},{"post_id":"ckv68b4pa001kqggs9kk2hwa5","category_id":"ckv68b4pb001lqggsafspdsc0","_id":"ckv68b4pc001oqggsbc3r30zb"},{"post_id":"ckv68b4pi001pqggscj1fev5j","category_id":"ckv68b4pj001qqggsf9zg5wfx","_id":"ckv68b4pj001tqggs3iakbjsu"}],"PostTag":[{"post_id":"ckv68b4ok0002qggs1iel0092","tag_id":"ckv68b4op0006qggs8sky214r","_id":"ckv68b4os000cqggscfc63g19"},{"post_id":"ckv68b4ot000dqggs6gcz18nf","tag_id":"ckv68b4op0006qggs8sky214r","_id":"ckv68b4ow000iqggsbi792sez"},{"post_id":"ckv68b4on0004qggs91ce8yna","tag_id":"ckv68b4os000bqggs6hriaije","_id":"ckv68b4ox000kqggsfxw85fpm"},{"post_id":"ckv68b4ot000eqggs37c8dxpf","tag_id":"ckv68b4os000bqggs6hriaije","_id":"ckv68b4p0000pqggs2ms2026j"},{"post_id":"ckv68b4ow000jqggsfwnpbdqx","tag_id":"ckv68b4op0006qggs8sky214r","_id":"ckv68b4p1000sqggsfzi1elb9"},{"post_id":"ckv68b4oq0007qggs30jrdov5","tag_id":"ckv68b4os000bqggs6hriaije","_id":"ckv68b4p3000xqggs9qc9b8uu"},{"post_id":"ckv68b4ox000lqggsgea745x8","tag_id":"ckv68b4op0006qggs8sky214r","_id":"ckv68b4p40010qggs75u26aph"},{"post_id":"ckv68b4p0000qqggs6y9zbp0t","tag_id":"ckv68b4op0006qggs8sky214r","_id":"ckv68b4p50015qggsghxygn7v"},{"post_id":"ckv68b4oq0008qggs3wgudxti","tag_id":"ckv68b4os000bqggs6hriaije","_id":"ckv68b4p60018qggs2qhd2yo8"},{"post_id":"ckv68b4p3000yqggs326e3y0c","tag_id":"ckv68b4os000bqggs6hriaije","_id":"ckv68b4p7001aqggs09tafhsp"},{"post_id":"ckv68b4or0009qggshijl7ie2","tag_id":"ckv68b4p2000wqggs71jad1jj","_id":"ckv68b4p7001cqggscpnhdk33"},{"post_id":"ckv68b4p40011qggs2i1241sn","tag_id":"ckv68b4os000bqggs6hriaije","_id":"ckv68b4p7001eqggsfwlj0ekd"},{"post_id":"ckv68b4p50016qggs3m756cgj","tag_id":"ckv68b4os000bqggs6hriaije","_id":"ckv68b4p7001gqggs4uh5btuu"},{"post_id":"ckv68b4p1000tqggs34z1e15d","tag_id":"ckv68b4p50014qggs49n9ewnq","_id":"ckv68b4p7001iqggsgja55fgp"},{"post_id":"ckv68b4pa001kqggs9kk2hwa5","tag_id":"ckv68b4pb001mqggsfby1avfq","_id":"ckv68b4pc001nqggs8kpg7n2z"},{"post_id":"ckv68b4pi001pqggscj1fev5j","tag_id":"ckv68b4pj001rqggs47hk5679","_id":"ckv68b4pj001sqggs0rey68k9"}],"Tag":[{"name":"Android","_id":"ckv68b4op0006qggs8sky214r"},{"name":"hexo","_id":"ckv68b4os000bqggs6hriaije"},{"name":"Kotlin","_id":"ckv68b4p2000wqggs71jad1jj"},{"name":"git","_id":"ckv68b4p50014qggs49n9ewnq"},{"name":"RN","_id":"ckv68b4pb001mqggsfby1avfq"},{"name":"草稿","_id":"ckv68b4pj001rqggs47hk5679"}]}}